[
    {
        "title": "Sapa tháng 05/2021 - Kỷ niệm ý nghĩa và chuyến đi thay đổi nhiều thứ",
        "description": "Một chuyến đi 3 ngày 2 đêm đầy ắp những kỷ niệm, chuyến du lịch xa nhất mình từng đi. Trải nghiệm những điều mới lạ, hòa mình với khí hậu trong lành của vùng Tây Bắc.",
        "thumbnail": "https://photos.google.com/photo/AF1QipMLzLbEAkiH37qMbOoTav0huHT_1WHHtC-7lqWE",
        "publishDate": "2021-09-04T17:00:00.436Z",
        "category": 3,
        "tags": [
            1,
            9
        ],
        "hide": false,
        "id": 1,
        "dateCreatedAt": "2021-09-04T08:46:22.202Z",
        "dateUpdatedAt": "2021-09-18T15:54:32.014Z",
        "slug": "chuyen-di-sapa-05-2021",
        "content": "<p>&nbsp;</p>\n\n<p>H&agrave;nh tr&igrave;nh được bắt đầu từ 8 giờ tối thứ năm ng&agrave;y 29/04/2021, sau khi tắm v&agrave; ăn nhẹ xong m&igrave;nh bắt đầu x&aacute;ch vali v&agrave; bắt đầu đi ra bến xe bu&yacute;t để bắt xe 32 đến Cầu Giấy ( gần đại học sư phạm H&agrave; Nội ) v&agrave; v&agrave;o rẽ v&agrave;o nh&agrave; anh Tuấn ( đồng nghiệp c&ugrave;ng c&ocirc;ng ty ) để tập trung. Khoảng 10 giờ th&igrave; bọn m&igrave;nh đi taxi đến điểm hẹn ở Trần Quốc Ho&agrave;n. Trải nhiệm lần đầu đi xe dường nằm kh&aacute; l&agrave; th&uacute; vị, m&igrave;nh ngồi ghế đầu n&ecirc;n thấy được hết tất cả c&aacute;c cảnh vật tr&ecirc;n đường.</p>\n\n<p>Trong khoảng thời gian tr&ecirc;n xe m&igrave;nh l&agrave;m được kh&aacute; nhiều việc v&iacute; dụ như xem đ&aacute; b&oacute;ng - m&igrave;nh nhớ kh&ocirc;ng nhầm th&igrave; đ&oacute; l&agrave; trận đấu của MU ở&nbsp;UEFA Europa League, xem MV Muộn Rồi M&agrave; Sao C&ograve;n của Sếp.</p>\n\n<p><strong>Phần c&ograve;n lại của chuyến đi m&igrave;nh sẽ m&ocirc; tả bằng những h&igrave;nh ảnh bản th&acirc;n.</strong></p>\n\n<h3 style=\"text-align:center\"><strong>Bộ ảnh &aacute;o xanh thẫm - S&aacute;ng 30/04</strong></h3>\n\n<p style=\"text-align:center\"><em>&nbsp;Quảng trường, nh&agrave; thờ v&agrave; Sun Plaza</em></p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1CKTKGsaR_ooXlfteqijeC3FP4GCiQLkL\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1e9biiclN2p4853LK3tdut0ewYzKxYLcH\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1WJdxtPOe14PQZGOE_yvK4kbS5BouKGrp\" style=\"height:374px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1kg3EW1o3LV2GJPBXG2U6aZV0vmOR36xw\" style=\"height:668px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1SjZ7tZW-qp2sxu2nxJBKYCwu3w2NjTMb\" style=\"height:668px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1XkA0arg58ViEEuqpoclLVebTSEjS-0vu\" style=\"height:668px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1fJoSm1Qj4pSMehrmsqA7K-en1D5NGlbB\" style=\"height:668px; width:500px\" /></p>\n\n<p style=\"text-align:center\">&nbsp;</p>\n\n<p style=\"text-align:center\"><strong>Bộ ảnh &aacute;o d&acirc;n tộc - Chiều 30/4</strong></p>\n\n<p style=\"text-align:center\"><em>H&oacute;a th&acirc;n l&agrave; một anh T&agrave;o A Thắng :))</em></p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1A4DExQ907BR66Pn3uY2FrzKpcIN0DWU5\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1r4O4s3VOt9xYyvdq668D_LMAAE_x4qa7\" style=\"height:374px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1E3yvKUs7R3qcb-If9lTbXeP_H0xjTsVd\" style=\"height:374px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=10hfSIpt-bcuK_HbQ2929BMQ-qNBTytaw\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1o9L-qLlPP0OSLchThgmi5D3SKnSye5aw\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1OsBlF_a1tI1S6Qy4HdbeAJP9S_8D-Jfb\" style=\"height:375px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1bIbZ0i_Itarz8nA7Kz3sYs-xSqOl2-ty\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Qxwif_ngmBlKrnBF-hT4QhcMtpKfEzH0\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1QEmP4A3GGz32jmgbeeVEkghXuRuSwhwv\" style=\"height:375px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1y2atNhpkuqIPwnCUh0IyQIveGW1oV3Q5\" style=\"height:667px; width:500px\" /></em></p>\n\n<p style=\"text-align:center\">&nbsp;</p>\n\n<p style=\"text-align:center\"><strong>Bộ ảnh tại Ga mường hoa - S&aacute;ng 01/05</strong></p>\n\n<p style=\"text-align:center\"><em>Được đi t&agrave;u m&agrave; tưởng tượng c&oacute; thể rơi xuống bất kỳ l&uacute;c n&agrave;o.</em></p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1zs9cau2OJ9m2SQm-6kWvELxFzNr061hj\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1hMg-OFXSJgga88uzdjux3YS1JM0Z-k9M\" style=\"height:667px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1M46r8kL30f0ccf0I6m_2LiRXT8eL4t8H\" style=\"height:375px; width:500px\" /></em></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><em><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=12LbQrzGX1zuJypfOAo6xRVRoXmhipzXg\" style=\"height:667px; width:500px\" /></em></p>\n\n<p style=\"text-align:center\">&nbsp;</p>\n\n<p style=\"text-align:center\"><strong>Bộ ảnh tại Cổng Trời - C&acirc;y C&ocirc; Đơn</strong></p>\n\n<p style=\"text-align:center\"><em>Lấy hết cam đam để c&oacute; được tấm ảnh với c&acirc;y c&ocirc; đơn.</em></p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Mbdf100GGh3OEkDl1dGZwDxm_YUVodl_\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1xPW2KTz94GO645v0gDkd9qevK2iRpaIT\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=17s3Kj5m4nWMYKVTqoPh2BguWmYZlnjpz\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1NnADRCP0J2wJ9GaR0KXDceK-p1awvUtf\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1v9gbv8FZ-5yhoXUK0fm4A48uFIPLE-nQ\" style=\"height:667px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1eYmXM_rd0ebx1O0PiebaetEfMXJRYa4v\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1UoI_tw7PU2j3ySiPxNVjPWoU6RYWdO-V\" style=\"height:375px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=15rUVYtKeHZ_8FhEaOJn6ks-varqGkDzP\" style=\"height:375px; width:500px\" /></p>\n\n<p style=\"text-align:center\">&nbsp;</p>\n\n<p style=\"text-align:center\"><strong>Bộ ảnh tại &Ocirc; Quy Hồ</strong></p>\n\n<p style=\"text-align:center\"><em>Cảm gi&aacute;c như m&igrave;nh đang ở tr&ecirc;n trời vậy.</em></p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1VnMBXXinWWp4iDxdzAVtMZ7Od-cLXDX2\" style=\"height:668px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Ew3gk0PN7nnPVipCGpv4fne1o4WSG98i\" style=\"height:667px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=15311AsSv3O6wxDLiuUttOgT-LEaivF79\" style=\"height:667px; width:500px\" /></p>\n\n<p>&nbsp;</p>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1M_K6Bh_ZaQIIx7XE4Ls1TgVaJP8Xk4-m\" style=\"height:375px; width:500px\" /></p>\n\n<p style=\"text-align:center\">&nbsp;</p>\n"
    },
    {
        "title": "Xây dựng ứng dụng To Do List với React JS",
        "description": "ToDoList App là một ứng dụng  quản lý danh sách các công việc cần được thưc hiện. Đây là ứng dụng đầu tiên mình làm khi mình học bất cứ 1 công nghệ nào mới như Flutter, React, Vue, Node,... Bài viết này mình sẽ xây dựng ứng dụng ToDoList bằng React JS.",
        "thumbnail": "https://drive.google.com/uc?export=view&id=17hVotsxbyuq7ewKfO2Jbe1lXC_2EdqN1",
        "publishDate": "2021-09-10T17:00:00.754Z",
        "category": 1,
        "tags": [
            6,
            3,
            2,
            4,
            7
        ],
        "hide": false,
        "slug": "build-todolist-app-reactjs",
        "id": 2,
        "dateCreatedAt": "2021-09-10T11:03:56.310Z",
        "dateUpdatedAt": "2021-09-18T15:15:25.238Z",
        "content": "<h3><strong>ToDoList App l&agrave; g&igrave; ?</strong></h3>\n\n<p>ToDoList App l&agrave; một ứng dụng&nbsp; quản l&yacute; danh s&aacute;ch c&aacute;c c&ocirc;ng việc cần được thưc hiện. Đ&acirc;y l&agrave; ứng dụng đầu ti&ecirc;n m&igrave;nh l&agrave;m khi m&igrave;nh học bất cứ 1 c&ocirc;ng nghệ n&agrave;o mới như Flutter, React, Vue, Node,... B&agrave;i viết n&agrave;y m&igrave;nh sẽ x&acirc;y dựng ứng dụng ToDoList bằng React JS.</p>\n\n<h3 style=\"text-align:center\"><u><strong>Preview ToDoList App</strong></u></h3>\n\n<h3 style=\"text-align:center\"><iframe frameborder=\"0\" height=\"800px\" scrolling=\"yes\" src=\"https://trandinhthang99.github.io/todolist-react/\" width=\"500px\"></iframe></h3>\n\n<h3><strong>Đoạn Code HTML :</strong></h3>\n\n<pre>\n<code>&lt;div class=\"app\"&gt;\n    &lt;div class=\"header\"&gt;\n        &lt;h2&gt;To Do List - React&lt;/h2&gt;\n        &lt;div class=\"input\"&gt;\n            &lt;input type=\"text\" placeholder=\"Title...\" /&gt;\n            &lt;span class=\"addBtn\"&gt;Add&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"body\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;\n                &lt;span class=\"checkedIcon\"&gt;&lt;/span&gt;\n                &lt;span class=\"label\"&gt; Learn English &lt;/span&gt;\n                &lt;span class=\"close\"&gt; × &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"checked\"&gt;\n                &lt;span class=\"checkedIcon\"&gt;&lt;/span&gt;\n                &lt;span class=\"label\"&gt; Run &lt;/span&gt;\n                &lt;span class=\"close\"&gt; × &lt;/span&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code>\n</pre>\n\n<h3><strong>Đoạn Code CSS :</strong></h3>\n\n<pre>\n<code>* {\n    box-sizing: border-box;\n    font-family: \"Handlee\", cursive;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    background-color: #f3f1f5;\n}\n\n.app {\n    height: 100vh;\n    width: 100%;\n    margin: auto;\n    padding: 1rem 0;\n}\n\n.header {\n    background-color: #22577a;\n    padding: 1rem 2rem;\n    color: white;\n    text-align: center;\n    font-size: 2rem;\n    height: 200px;\n}\n\n.header:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.header h2 {\n    margin: 1rem 0;\n}\n\ninput {\n    margin: 0;\n    border: none !important;\n    border-radius: 0;\n    width: 75%;\n    padding: 10px;\n    float: left;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n}\n\n.addBtn {\n    padding: 10px;\n    width: 25%;\n    background: #9d9d9d;\n    color: #fff;\n    font-weight: 600;\n    float: left;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    transition: 0.3s;\n    border-radius: 0;\n}\n\n.addBtn:hover {\n    background-color: #c8c6c6;\n}\n\n.body {\n    height: calc(100% - 220px);\n    overflow-y: auto;\n    /*padding-right: 0.5rem;*/\n    margin: 10px 0;\n}\n\n.body::-webkit-scrollbar {\n    width: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb {\n    background: #11324d;\n    border-radius: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb:hover {\n    background: #6b7aa1;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nul li {\n    margin: 0.25rem;\n    cursor: pointer;\n    position: relative;\n    padding: 12px 0;\n    background: #eee;\n    font-size: 18px;\n    transition: 0.2s;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nul li:hover .close {\n    display: flex;\n}\n\nul li:nth-child(odd) {\n    background: #f9f9f9;\n}\n\nul li:hover {\n    background: #ddd;\n}\n\nul li.checked .checkedIcon {\n    content: \"\";\n    position: absolute;\n    border-color: #fff;\n    border-style: solid;\n    border-width: 0 2px 2px 0;\n    top: 10px;\n    left: 16px;\n    transform: rotate(45deg);\n    height: 15px;\n    width: 7px;\n}\n\nul li.checked {\n    background-color: #7f7c82;\n    color: #fff;\n}\n\nul li.checked .label {\n    text-decoration: line-through;\n}\n\n.label {\n    position: absolute;\n    left: 40px;\n    right: 40px;\n}\n\n.close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 40px;\n    font-weight: 700;\n    font-size: 1.2rem;\n    align-items: center;\n    justify-content: center;\n    display: none;\n}\n\n@media only screen and (max-width: 800px) {\n    .app {\n        width: calc(100% - 2rem);\n    }\n    .header h2 {\n        font-size: 1.5rem;\n    }\n}\n\n@media only screen and (max-width: 1200px) and (min-width: 800px) {\n    .app {\n        width: 700px;\n    }\n}\n\n@media only screen and (min-width: 1200px) {\n    .app {\n        width: 900px;\n    }\n}</code>\n</pre>\n\n<h3><strong>Giao diện tr&ecirc;n điện thoại :</strong></h3>\n\n<h3 style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1DFmQGY77w61YvULnMLioul7AhwUmg_42\" style=\"height:1002px; width:600px\" /></h3>\n\n<h3><strong>Giao diện tr&ecirc;n desktop :</strong></h3>\n\n<h3 style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1IC1W9EZzDL6gF2S74fD9SXjNyy2H5ftZ\" style=\"height:311px; width:600px\" /></h3>\n\n<h3><br />\n<strong>Cấu tr&uacute;c project :</strong></h3>\n\n<ul>\n\t<li>\n\t<h3><strong>todolist-react</strong></h3>\n\n\t<ul>\n\t\t<li>\n\t\t<p><em>public</em></p>\n\t\t</li>\n\t\t<li>\n\t\t<p><em>src</em></p>\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t<p><em>App.js</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>App.css</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>constants.js</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>...</em></p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>\n\t\t<p><em>package.json</em></p>\n\t\t</li>\n\t\t<li>\n\t\t<p><em>...</em></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><strong>Khai b&aacute;o c&aacute;c constants :</strong></h3>\n\n<pre>\n<code>export const TO_DO_DONE = 'TO_DO_DONE';\nexport const TO_DO_PROCESSING = 'TO_DO_PROCESSING';\nexport const LABEL_TO_DO_LIST_STORAGE = 'dataToDoList';</code>\n</pre>\n\n<h3><strong>Khai b&aacute;o c&aacute;c state :</strong></h3>\n\n<p>Khởi tạo gi&aacute; tr&iacute; ban đầu cho state toDoList, trong trường hợp trước đ&oacute; bạn đ&atilde; sử dụng ứng dụng n&agrave;y tr&ecirc;n tr&igrave;nh duyệt của bạn, dữ liệu sẽ được lưu tr&ecirc;n localStorage v&agrave; cập nhật bất cứ khi n&agrave;o bạn quay lại với ứng dụng toDoList.<br />\n&nbsp;</p>\n\n<pre>\n<code>const [toDoList, setToDoList] = useState(() =&gt; {\n\tconst dataToDoList = localStorage.getItem(LABEL_TO_DO_LIST_STORAGE);\n\tconst dataInitial = JSON.parse(dataToDoList);\n\treturn Array.isArray(dataInitial) ? dataInitial : [];\n});\nconst [toDo, setToDo] = useState('');</code>\n</pre>\n\n<h3><strong>H&agrave;m cập nhật state toDo khi viết c&oacute; event onChange của input :</strong></h3>\n\n<pre>\n<code>const handleChange = (event) =&gt; {\n\tsetToDo(event.target.value)\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m xử l&yacute; việc th&ecirc;m mới 1 toDo :</strong></h3>\n\n<pre>\n<code>const addToDo = () =&gt; {\n\tif (toDo !== '') {\n\t\tsetToDoList(prev =&gt; {\n\t\t\tconst now = new Date();\n\t\t\treturn [{\n\t\t\t\tid: now.valueOf(),\n\t\t\t\tlabel: toDo,\n\t\t\t\tstatus: TO_DO_PROCESSING,\n\t\t\t\tcreatedAt: now,\n\t\t\t}].concat(prev)\n\t\t})\n\t\tsetToDo('');\n\t}\n}</code>\n</pre>\n\n<h3><strong>Thực hiện việc th&ecirc;m mới 1 toDo khi ấn Enter :</strong></h3>\n\n<pre>\n<code>const handleKeyDown = (event) =&gt; {\n\tif (event.key === 'Enter') {\n\t\taddToDo();\n\t}\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m xử l&yacute; việc x&oacute;a 1 toDoItem khỏi todoList :</strong></h3>\n\n<pre>\n<code>const removeToDoItem = (id) =&gt; {\n\tsetToDoList(prev =&gt; {\n\t\treturn prev.filter((toDoItem, index) =&gt; {\n\t\t\treturn toDoItem.id !== id;\n\t\t})\n\t})\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m thay đổi trạng th&aacute;i của toDo :</strong></h3>\n\n<pre>\n<code>const onChangeToDoStatus = (id) =&gt; {\n\tsetToDoList(prev =&gt; {\n\t\treturn prev.map((toDoItem, index) =&gt; {\n\t\t\tif (toDoItem.id === id) {\n\t\t\t\treturn {\n\t\t\t\t\t...toDoItem,\n\t\t\t\t\tstatus: toDoItem.status === TO_DO_DONE ? TO_DO_PROCESSING : TO_DO_DONE\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn toDoItem;\n\t\t\t}\n\t\t})\n\t})\n}</code>\n</pre>\n\n<h3><strong>Cập nhật dữ liệu localStorage khi state toDoList thay đổi :</strong></h3>\n\n<pre>\n<code>useEffect(() =&gt; {\n\tlocalStorage.setItem(LABEL_TO_DO_LIST_STORAGE, JSON.stringify(toDoList))\n}, [toDoList])</code>\n</pre>\n\n<h3><strong>Code JSX :</strong></h3>\n\n<pre>\n<code>&lt;div className=\"app\"&gt;\n    &lt;div className=\"header\"&gt;\n        &lt;h2&gt;To Do List - React&lt;/h2&gt;\n        &lt;div className=\"input\"&gt;\n            &lt;input\n                onChange={handleChange}\n                type=\"text\"\n                value={toDo}\n                placeholder=\"Title...\"\n                onKeyDown={handleKeyDown}\n            /&gt;\n            &lt;span className=\"addBtn\" onClick={() =&gt; addToDo()}&gt;\n                Add\n            &lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div className=\"body\"&gt;\n        &lt;ul&gt;\n            {toDoList.map((toDoItem, index) =&gt; {\n                return (\n                    &lt;li\n                        key={index}\n                        onClick={() =&gt; onChangeToDoStatus(toDoItem.id)}\n                        className={\n                            toDoItem.status === TO_DO_DONE ? \"checked\" : \"\"\n                        }\n                    &gt;\n                        &lt;span className=\"checkedIcon\"&gt;&lt;/span&gt;\n                        &lt;span className=\"label\"&gt;{toDoItem.label}&lt;/span&gt;\n                        &lt;span\n                            onClick={() =&gt; removeToDoItem(toDoItem.id)}\n                            className=\"close\"\n                        &gt;\n                            ×\n                        &lt;/span&gt;\n                    &lt;/li&gt;\n                );\n            })}\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code>\n</pre>\n\n<h3><u><strong>Chi tiết c&aacute;c File trong Project</strong></u></h3>\n\n<h3><strong>App.js :</strong></h3>\n\n<pre>\n<code>import './App.css';\nimport {\n\tuseEffect,\n\tuseState\n} from \"react\";\nimport {\n\tLABEL_TO_DO_LIST_STORAGE,\n\tTO_DO_DONE,\n\tTO_DO_PROCESSING\n} from \"./constants\";\n\nconst App = () =&gt; {\n\tconst [toDoList, setToDoList] = useState(() =&gt; {\n\t\tconst dataToDoList = localStorage.getItem(LABEL_TO_DO_LIST_STORAGE);\n\t\tconst dataInitial = JSON.parse(dataToDoList);\n\t\treturn Array.isArray(dataInitial) ? dataInitial : [];\n\t});\n\tconst [toDo, setToDo] = useState('');\n\n\tuseEffect(() =&gt; {\n\t\tlocalStorage.setItem(LABEL_TO_DO_LIST_STORAGE, JSON.stringify(toDoList))\n\t}, [toDoList])\n\tconst handleChange = (event) =&gt; {\n\t\tsetToDo(event.target.value)\n\t}\n\tconst addToDo = () =&gt; {\n\t\tif (toDo !== '') {\n\t\t\tsetToDoList(prev =&gt; {\n\t\t\t\tconst now = new Date();\n\t\t\t\treturn [{\n\t\t\t\t\tid: now.valueOf(),\n\t\t\t\t\tlabel: toDo,\n\t\t\t\t\tstatus: TO_DO_PROCESSING,\n\t\t\t\t\tcreatedAt: now,\n\t\t\t\t}].concat(prev)\n\t\t\t})\n\t\t\tsetToDo('');\n\t\t}\n\t}\n\tconst handleKeyDown = (event) =&gt; {\n\t\tif (event.key === 'Enter') {\n\t\t\taddToDo();\n\t\t}\n\t}\n\n\tconst removeToDoItem = (id) =&gt; {\n\t\tsetToDoList(prev =&gt; {\n\t\t\treturn prev.filter((toDoItem, index) =&gt; {\n\t\t\t\treturn toDoItem.id !== id;\n\t\t\t})\n\t\t})\n\t}\n\tconst onChangeToDoStatus = (id) =&gt; {\n\t\tsetToDoList(prev =&gt; {\n\t\t\treturn prev.map((toDoItem, index) =&gt; {\n\t\t\t\tif (toDoItem.id === id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...toDoItem,\n\t\t\t\t\t\tstatus: toDoItem.status === TO_DO_DONE ? TO_DO_PROCESSING : TO_DO_DONE\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn toDoItem;\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\treturn ( &lt;\n\t\tdiv className = \"app\" &gt;\n\t\t&lt;\n\t\tdiv className = \"header\" &gt;\n\t\t&lt;\n\t\th2 &gt; To Do List - React &lt; /h2&gt; &lt;\n\t\tdiv className = \"input\" &gt;\n\t\t&lt;\n\t\tinput onChange = {\n\t\t\thandleChange\n\t\t}\n\t\ttype = \"text\"\n\t\tvalue = {\n\t\t\ttoDo\n\t\t}\n\t\tplaceholder = \"Title...\"\n\t\tonKeyDown = {\n\t\t\thandleKeyDown\n\t\t}\n\t\t/&gt; &lt;\n\t\tspan className = \"addBtn\"\n\t\tonClick = {\n\t\t\t() =&gt; addToDo()\n\t\t} &gt; Add &lt; /span&gt; &lt;\n\t\t/div&gt; &lt;\n\t\t/div&gt; &lt;\n\t\tdiv className = \"body\" &gt;\n\t\t&lt;\n\t\tul &gt; {\n\t\t\ttoDoList.map((toDoItem, index) =&gt; {\n\t\t\t\treturn ( &lt;\n\t\t\t\t\tli key = {\n\t\t\t\t\t\tindex\n\t\t\t\t\t}\n\t\t\t\t\tonClick = {\n\t\t\t\t\t\t() =&gt; onChangeToDoStatus(toDoItem.id)\n\t\t\t\t\t}\n\t\t\t\t\tclassName = {\n\t\t\t\t\t\ttoDoItem.status === TO_DO_DONE ? \"checked\" : \"\"\n\t\t\t\t\t} &gt;\n\t\t\t\t\t&lt;\n\t\t\t\t\tspan className = \"checkedIcon\" &gt; &lt; /span&gt; &lt;\n\t\t\t\t\tspan className = \"label\" &gt; {\n\t\t\t\t\t\ttoDoItem.label\n\t\t\t\t\t} &lt;\n\t\t\t\t\t/span&gt; &lt;\n\t\t\t\t\tspan onClick = {\n\t\t\t\t\t\t() =&gt; removeToDoItem(toDoItem.id)\n\t\t\t\t\t}\n\t\t\t\t\tclassName = \"close\" &gt; ×\n\t\t\t\t\t&lt;\n\t\t\t\t\t/span&gt; &lt;\n\t\t\t\t\t/li&gt;\n\t\t\t\t)\n\t\t\t})\n\t\t} &lt;\n\t\t/ul&gt; &lt;\n\t\t/div&gt; &lt;\n\t\t/div&gt;\n\t);\n}\n\nexport default App;</code>\n</pre>\n\n<h3><strong>App.css :</strong></h3>\n\n<pre>\n<code>* {\n    box-sizing: border-box;\n    font-family: \"Handlee\", cursive;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    background-color: #f3f1f5;\n}\n\n.app {\n    height: 100vh;\n    width: 100%;\n    margin: auto;\n    padding: 1rem 0;\n}\n\n.header {\n    background-color: #22577a;\n    padding: 1rem 2rem;\n    color: white;\n    text-align: center;\n    font-size: 2rem;\n    height: 200px;\n}\n\n.header:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.header h2 {\n    margin: 1rem 0;\n}\n\ninput {\n    margin: 0;\n    border: none !important;\n    border-radius: 0;\n    width: 75%;\n    padding: 10px;\n    float: left;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n}\n\n.addBtn {\n    padding: 10px;\n    width: 25%;\n    background: #9d9d9d;\n    color: #fff;\n    font-weight: 600;\n    float: left;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    transition: 0.3s;\n    border-radius: 0;\n}\n\n.addBtn:hover {\n    background-color: #c8c6c6;\n}\n\n.body {\n    height: calc(100% - 220px);\n    overflow-y: auto;\n    /*padding-right: 0.5rem;*/\n    margin: 10px 0;\n}\n\n.body::-webkit-scrollbar {\n    width: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb {\n    background: #11324d;\n    border-radius: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb:hover {\n    background: #6b7aa1;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nul li {\n    margin: 0.25rem;\n    cursor: pointer;\n    position: relative;\n    padding: 12px 0;\n    background: #eee;\n    font-size: 18px;\n    transition: 0.2s;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nul li:hover .close {\n    display: flex;\n}\n\nul li:nth-child(odd) {\n    background: #f9f9f9;\n}\n\nul li:hover {\n    background: #ddd;\n}\n\nul li.checked .checkedIcon {\n    content: \"\";\n    position: absolute;\n    border-color: #fff;\n    border-style: solid;\n    border-width: 0 2px 2px 0;\n    top: 10px;\n    left: 16px;\n    transform: rotate(45deg);\n    height: 15px;\n    width: 7px;\n}\n\nul li.checked {\n    background-color: #7f7c82;\n    color: #fff;\n}\n\nul li.checked .label {\n    text-decoration: line-through;\n}\n\n.label {\n    position: absolute;\n    left: 40px;\n    right: 40px;\n}\n\n.close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 40px;\n    font-weight: 700;\n    font-size: 1.2rem;\n    align-items: center;\n    justify-content: center;\n    display: none;\n}\n\n@media only screen and (max-width: 800px) {\n    .app {\n        width: calc(100% - 2rem);\n    }\n    .header h2 {\n        font-size: 1.5rem;\n    }\n}\n\n@media only screen and (max-width: 1200px) and (min-width: 800px) {\n    .app {\n        width: 700px;\n    }\n}\n\n@media only screen and (min-width: 1200px) {\n    .app {\n        width: 900px;\n    }\n}</code>\n</pre>\n\n<h3><strong>constants.js :</strong></h3>\n\n<pre>\n<code>export const TO_DO_DONE = 'TO_DO_DONE';\nexport const TO_DO_PROCESSING = 'TO_DO_PROCESSING';\nexport const LABEL_TO_DO_LIST_STORAGE = 'dataToDoList';</code>\n</pre>\n\n<p><strong>Source Code :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://github.com/trandinhthang99/todolist-react\" target=\"_blank\">https://github.com/trandinhthang99/todolist-react</a></em></p>\n\n<p><strong>Demo :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://trandinhthang99.github.io/todolist-react/\" target=\"_blank\">https://trandinhthang99.github.io/todolist-react/</a></em></p>\n"
    },
    {
        "title": "Xây dựng ứng dụng To Do List với Javascript",
        "description": "Trong bài viết này mình sẽ xây dựng ứng dụng ToDoList bằng Javascript, thông qua cơ chế DOM để thao tác với các thẻ HTML.",
        "thumbnail": "https://drive.google.com/uc?export=view&id=1axhbu6YFp7o6GZ0G1yrQlmMmefxRxuAv",
        "publishDate": "2021-09-11T17:00:00.115Z",
        "category": 1,
        "tags": [
            2,
            3,
            4,
            7
        ],
        "hide": false,
        "slug": "build-todolist-app-javascript",
        "id": 3,
        "dateCreatedAt": "2021-09-11T07:12:56.193Z",
        "dateUpdatedAt": "2021-09-18T15:16:05.540Z",
        "content": "<p>Ở b&agrave;i viết trước m&igrave;nh đ&atilde; sử dụng React JS để x&acirc;y dựng ứng dụng To Do List. H&ocirc;m n&agrave;y m&igrave;nh sẽ sử dụng Javascript thuần để x&acirc;y dựng ứng dụng ToDoList. Dự định của m&igrave;nh l&agrave; sẽ x&acirc;y dựng một series b&agrave;i viết về việc x&acirc;y dựng ứng dụng To Do List bằng c&aacute;c c&ocirc;ng nghệ kh&aacute;c nhau chạy tr&ecirc;n nền tảng kh&aacute;c nhau.<br />\n<strong>V&iacute; dụ :</strong></p>\n\n<ul>\n\t<li><em>X&acirc;y dựng ứng dụng di động todoList sử dụng Flutter, SQLite.</em></li>\n\t<li><em>Xẩy dựng ứng dụng web toDoList sử dụng ( Redux/useContext/Typescript/Vue )</em></li>\n\t<li><em>...</em></li>\n</ul>\n\n<h3><strong>ToDoList App l&agrave; g&igrave; ?</strong></h3>\n\n<p>ToDoList App l&agrave; một ứng dụng&nbsp; quản l&yacute; danh s&aacute;ch c&aacute;c c&ocirc;ng việc cần được thưc hiện. Đ&acirc;y l&agrave; ứng dụng đầu ti&ecirc;n m&igrave;nh l&agrave;m khi m&igrave;nh học bất cứ 1 c&ocirc;ng nghệ n&agrave;o mới như Flutter, React, Vue, Node,... B&agrave;i viết n&agrave;y m&igrave;nh sẽ x&acirc;y dựng ứng dụng ToDoList bằng React JS.</p>\n\n<h3 style=\"text-align:center\"><u><strong>Preview ToDoList App</strong></u></h3>\n\n<h3 style=\"text-align:center\"><iframe frameborder=\"0\" height=\"800px\" scrolling=\"yes\" src=\"https://trandinhthang99.github.io/todolist-javascript/\" width=\"500px\"></iframe></h3>\n\n<h3><strong>Code HTML :</strong></h3>\n\n<pre>\n<code>&lt;div class=\"app\"&gt;\n    &lt;div class=\"header\"&gt;\n        &lt;h2&gt;To Do List - React&lt;/h2&gt;\n        &lt;div class=\"input\"&gt;\n            &lt;input type=\"text\" placeholder=\"Title...\" /&gt;\n            &lt;span class=\"addBtn\"&gt;Add&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"body\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;\n                &lt;span class=\"checkedIcon\"&gt;&lt;/span&gt;\n                &lt;span class=\"label\"&gt; Learn English &lt;/span&gt;\n                &lt;span class=\"close\"&gt; × &lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li class=\"checked\"&gt;\n                &lt;span class=\"checkedIcon\"&gt;&lt;/span&gt;\n                &lt;span class=\"label\"&gt; Run &lt;/span&gt;\n                &lt;span class=\"close\"&gt; × &lt;/span&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code>\n</pre>\n\n<h3><strong>Code CSS :</strong></h3>\n\n<pre>\n<code>* {\n    box-sizing: border-box;\n    font-family: \"Handlee\", cursive;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    background-color: #f3f1f5;\n}\n\n.app {\n    height: 100vh;\n    width: 100%;\n    margin: auto;\n    padding: 1rem 0;\n}\n\n.header {\n    background-color: #22577a;\n    padding: 1rem 2rem;\n    color: white;\n    text-align: center;\n    font-size: 2rem;\n    height: 200px;\n}\n\n.header:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.header h2 {\n    margin: 1rem 0;\n}\n\ninput {\n    margin: 0;\n    border: none !important;\n    border-radius: 0;\n    width: 75%;\n    padding: 10px;\n    float: left;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n}\n\n.addBtn {\n    padding: 10px;\n    width: 25%;\n    background: #9d9d9d;\n    color: #fff;\n    font-weight: 600;\n    float: left;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    transition: 0.3s;\n    border-radius: 0;\n}\n\n.addBtn:hover {\n    background-color: #c8c6c6;\n}\n\n.body {\n    height: calc(100% - 220px);\n    overflow-y: auto;\n    /*padding-right: 0.5rem;*/\n    margin: 10px 0;\n}\n\n.body::-webkit-scrollbar {\n    width: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb {\n    background: #11324d;\n    border-radius: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb:hover {\n    background: #6b7aa1;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nul li {\n    margin: 0.25rem;\n    cursor: pointer;\n    position: relative;\n    padding: 12px 0;\n    background: #eee;\n    font-size: 18px;\n    transition: 0.2s;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nul li:hover .close {\n    display: flex;\n}\n\nul li:nth-child(odd) {\n    background: #f9f9f9;\n}\n\nul li:hover {\n    background: #ddd;\n}\n\nul li.checked .checkedIcon {\n    content: \"\";\n    position: absolute;\n    border-color: #fff;\n    border-style: solid;\n    border-width: 0 2px 2px 0;\n    top: 10px;\n    left: 16px;\n    transform: rotate(45deg);\n    height: 15px;\n    width: 7px;\n}\n\nul li.checked {\n    background-color: #7f7c82;\n    color: #fff;\n}\n\nul li.checked .label {\n    text-decoration: line-through;\n}\n\n.label {\n    position: absolute;\n    left: 40px;\n    right: 40px;\n}\n\n.close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 40px;\n    font-weight: 700;\n    font-size: 1.2rem;\n    align-items: center;\n    justify-content: center;\n    display: none;\n}\n\n@media only screen and (max-width: 800px) {\n    .app {\n        width: calc(100% - 2rem);\n    }\n    .header h2 {\n        font-size: 1.5rem;\n    }\n}\n\n@media only screen and (max-width: 1200px) and (min-width: 800px) {\n    .app {\n        width: 700px;\n    }\n}\n\n@media only screen and (min-width: 1200px) {\n    .app {\n        width: 900px;\n    }\n}</code>\n</pre>\n\n<h3><strong>Giao diện tr&ecirc;n điện thoại :</strong></h3>\n\n<h3 style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Dt4ABPvvpJriu8hKPhrVfkCZQ8lEu8_o\" style=\"height:1093px; width:600px\" /></h3>\n\n<h3><strong>Giao diện tr&ecirc;n desktop :</strong></h3>\n\n<h3 style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1GRyF_mdZLD4GfO0OS112M1FPMD9zfLn1\" style=\"height:312px; width:600px\" /></h3>\n\n<h3><br />\n<strong>Cấu tr&uacute;c project :</strong></h3>\n\n<ul>\n\t<li><strong>todolist-javascript</strong>\n\n\t<ul>\n\t\t<li><em>index.html</em></li>\n\t\t<li><em>style.css</em></li>\n\t\t<li><em>script.js</em></li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><strong>Khai b&aacute;o c&aacute;c constants :</strong></h3>\n\n<pre>\n<code>const TO_DO_DONE = 'TO_DO_DONE';\nconst TO_DO_PROCESSING = 'TO_DO_PROCESSING';\nconst LABEL_TO_DO_LIST_STORAGE = 'dataToDoListJavascript';</code>\n</pre>\n\n<h3><strong>Khởi tạo gi&aacute; trị cho toDoList:</strong></h3>\n\n<p>Ta sử dụng event onload được đặt trong thẻ body để thực hiện việc khởi tạo gi&aacute; trị cho toDoList. Gi&aacute; trị khởi tạo được lấy ở localStorage ( nơi lưu c&aacute;c toDoList m&agrave; bạn đ&atilde; th&ecirc;m trước đ&oacute; ).<br />\nKiến thức về event onload :&nbsp;<a href=\"https://www.w3schools.com/jsref/event_onload.asp\">https://www.w3schools.com/jsref/event_onload.asp</a></p>\n\n<pre>\n<code>// khai bao event onload trong thẻ body\n&lt;body onload=\"onLoad()\"&gt;\n\n\n// function onload\nconst onLoad = () =&gt; {\n    try {\n        const dataToDoList = localStorage.getItem(LABEL_TO_DO_LIST_STORAGE);\n        const dataInitial = JSON.parse(dataToDoList);\n        toDoList = Array.isArray(dataInitial) ? dataInitial : [];\n        console.log(toDoList)\n        toDoList.forEach((toDoItem, index) =&gt; {\n            addLiEl(toDoItem);\n        })\n    } catch (e) {\n\n    }\n}</code>\n</pre>\n\n<h3><strong>C&aacute;c h&agrave;m thực hiện việc th&ecirc;m 1 toDo khi c&oacute; sử kiện click button addToDo:</strong></h3>\n\n<pre>\n<code>// html code\n&lt;span onclick=\"clickAddToDo()\" id=\"addToDo\" class=\"addBtn\"&gt;Add&lt;/span&gt;\n\n\n// javascript code\nconst clickAddToDo = () =&gt; {\n    const toDoInput = document.getElementById('toDoInput');\n    const toDoText = toDoInput.value;\n    if (toDoText !== '') {\n        const dataToDo = addToDo(toDoText);\n        addLiEl(dataToDo);\n        toDoInput.value = '';\n    }\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m nhận biết sự kiện nhấn Enter để thực hiện việc th&ecirc;m mới 1 toDo:</strong></h3>\n\n<pre>\n<code>// html code\n&lt;input onkeydown=\"onkeydownInput(event)\" id=\"toDoInput\" type=\"text\" placeholder=\"Title...\" /&gt;\n\n\n// javascript code\nconst onkeydownInput = (event) =&gt; {\n    if (event.key === 'Enter') {\n        clickAddToDo();\n    }\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m cập nhật dataToDoList lưu v&agrave;o localStorage :</strong></h3>\n\n<pre>\n<code>const updateDataLocalStorage = (toDoList) =&gt; {\n    localStorage.setItem(LABEL_TO_DO_LIST_STORAGE, JSON.stringify(toDoList))\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m thực hiện việc th&ecirc;m mới 1 toDo v&agrave;o toDoList v&agrave; lưu v&agrave;o localStorage:</strong></h3>\n\n<pre>\n<code>const addToDo = (toDo) =&gt; {\n    const now = new Date();\n    const dataToDo = {\n        id: now.valueOf(),\n        label: toDo,\n        status: TO_DO_PROCESSING,\n        createdAt: now,\n    };\n    toDoList.push(dataToDo)\n    updateDataLocalStorage(toDoList);\n    return dataToDo;\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m thực hiện việc th&ecirc;m mới 1 Li Element toDo :</strong></h3>\n\n<pre>\n<code>const addLiEl = (dataToDo) =&gt; {\n    const id = dataToDo.id;\n    const toDoText = dataToDo.label;\n    const liEle = document.createElement('li')\n    liEle.setAttribute('id', id.toString());\n    if (dataToDo.status === TO_DO_DONE) {\n        liEle.setAttribute('class', 'checked');\n    }\n    liEle.setAttribute('onclick', `toggleStatusToDo(${id})`)\n\n    // span checkIcon\n    const spanChecked = document.createElement('span');\n    spanChecked.setAttribute('class', 'checkedIcon');\n    liEle.appendChild(spanChecked);\n\n    // span label\n    const spanLabel = document.createElement('span');\n    spanLabel.setAttribute('class', 'label');\n    spanLabel.innerText = toDoText;\n    liEle.appendChild(spanLabel);\n\n    // span label\n    const spanClose = document.createElement('span');\n    spanClose.setAttribute('class', 'close');\n    spanClose.setAttribute('onclick', `clickRemoveToDo(${id})`)\n    spanClose.innerText = '×';\n    liEle.appendChild(spanClose);\n\n    document.getElementById('toDoList').prepend(liEle);\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m xử l&yacute; việc x&oacute;a 1 toDo :</strong></h3>\n\n<pre>\n<code>// close element khi tao moi 1 li element\nconst spanClose = document.createElement('span');\nspanClose.setAttribute('class', 'close');\nspanClose.setAttribute('onclick', `clickRemoveToDo(${id})`)\n\n\n\n// javascript code\nconst clickRemoveToDo = (id) =&gt; {\n    const liEle = document.getElementById(id);\n    liEle.remove();\n    removeToDo(id);\n}\n\nconst removeToDo = (id) =&gt; {\n    toDoList = toDoList.filter((toDoItem, index) =&gt; {\n        return toDoItem.id !== id;\n    })\n    updateDataLocalStorage(toDoList);\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m xử l&yacute; việc thay đổi trạng th&aacute;i của 1 toDo :</strong></h3>\n\n<pre>\n<code>// khi bao su kien vao li element\nliEle.setAttribute('onclick', `toggleStatusToDo(${id})`)\n\n\n\n// javascript code\nconst toggleStatusToDo = (id) =&gt; {\n    const toDoToggle = toDoList.find((toDoItem, index) =&gt; {\n        return toDoItem.id === id;\n    })\n    if (toDoToggle) {\n        const liEle = document.getElementById(id);\n        if (toDoToggle.status === TO_DO_DONE) {\n            liEle.classList.remove('checked');\n        } else {\n            liEle.classList.add('checked')\n        }\n    }\n    onChangeToDoStatus(id);\n}\n\nconst onChangeToDoStatus = (id) =&gt; {\n    toDoList = toDoList.map((toDoItem, index) =&gt; {\n        if (toDoItem.id === id) {\n            return {\n                ...toDoItem,\n                status: toDoItem.status === TO_DO_DONE ? TO_DO_PROCESSING : TO_DO_DONE\n            }\n        } else {\n            return toDoItem;\n        }\n    })\n    updateDataLocalStorage(toDoList);\n}</code>\n</pre>\n\n<h3><u><strong>Chi tiết c&aacute;c File trong Project</strong></u></h3>\n\n<h3><strong>index.html :</strong></h3>\n\n<pre>\n<code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\"\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n    &lt;link rel=\"icon\" href=\"profile_circle.png\" /&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Handlee&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;To Do List App - Javascript | Tran Dinh Thang&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body onload=\"onLoad()\"&gt;\n    &lt;div class=\"app\"&gt;\n        &lt;div class=\"header\"&gt;\n            &lt;h2&gt;To Do List - Javascript&lt;/h2&gt;\n            &lt;div class=\"input\"&gt;\n                &lt;input onkeydown=\"onkeydownInput(event)\" id=\"toDoInput\" type=\"text\" placeholder=\"Title...\" /&gt;\n                &lt;span onclick=\"clickAddToDo()\" id=\"addToDo\" class=\"addBtn\"&gt;Add&lt;/span&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"body\"&gt;\n            &lt;ul id=\"toDoList\"&gt;\n\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code>\n</pre>\n\n<h3><strong>style.css :</strong></h3>\n\n<pre>\n<code>* {\n    box-sizing: border-box;\n    font-family: \"Handlee\", cursive;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    background-color: #f3f1f5;\n}\n\n.app {\n    height: 100vh;\n    width: 100%;\n    margin: auto;\n    padding: 1rem 0;\n}\n\n.header {\n    background-color: #22577a;\n    padding: 1rem 2rem;\n    color: white;\n    text-align: center;\n    font-size: 2rem;\n    height: 200px;\n}\n\n.header:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.header h2 {\n    margin: 1rem 0;\n}\n\ninput {\n    margin: 0;\n    border: none !important;\n    border-radius: 0;\n    width: 75%;\n    padding: 10px;\n    float: left;\n    font-size: 16px;\n}\n\ninput:focus {\n    outline: none;\n}\n\n.addBtn {\n    padding: 10px;\n    width: 25%;\n    background: #9d9d9d;\n    color: #fff;\n    font-weight: 600;\n    float: left;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n    transition: 0.3s;\n    border-radius: 0;\n}\n\n.addBtn:hover {\n    background-color: #c8c6c6;\n}\n\n.body {\n    height: calc(100% - 220px);\n    overflow-y: auto;\n    /*padding-right: 0.5rem;*/\n    margin: 10px 0;\n}\n\n.body::-webkit-scrollbar {\n    width: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb {\n    background: #11324d;\n    border-radius: 0.5rem;\n}\n.body::-webkit-scrollbar-thumb:hover {\n    background: #6b7aa1;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nul li {\n    margin: 0.25rem;\n    cursor: pointer;\n    position: relative;\n    padding: 12px 0;\n    background: #eee;\n    font-size: 18px;\n    transition: 0.2s;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\nul li:hover .close {\n    display: flex;\n}\n\nul li:nth-child(odd) {\n    background: #f9f9f9;\n}\n\nul li:hover {\n    background: #ddd;\n}\n\nul li.checked .checkedIcon {\n    content: \"\";\n    position: absolute;\n    border-color: #fff;\n    border-style: solid;\n    border-width: 0 2px 2px 0;\n    top: 10px;\n    left: 16px;\n    transform: rotate(45deg);\n    height: 15px;\n    width: 7px;\n}\n\nul li.checked {\n    background-color: #7f7c82;\n    color: #fff;\n}\n\nul li.checked .label {\n    text-decoration: line-through;\n}\n\n.label {\n    position: absolute;\n    left: 40px;\n    right: 40px;\n}\n\n.close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 40px;\n    font-weight: 700;\n    font-size: 1.2rem;\n    align-items: center;\n    justify-content: center;\n    display: none;\n}\n\n@media only screen and (max-width: 800px) {\n    .app {\n        width: calc(100% - 2rem);\n    }\n    .header h2 {\n        font-size: 1.5rem;\n    }\n}\n\n@media only screen and (max-width: 1200px) and (min-width: 800px) {\n    .app {\n        width: 700px;\n    }\n}\n\n@media only screen and (min-width: 1200px) {\n    .app {\n        width: 900px;\n    }\n}</code>\n</pre>\n\n<h3><strong>script.js :</strong></h3>\n\n<pre>\n<code>const TO_DO_DONE = 'TO_DO_DONE';\nconst TO_DO_PROCESSING = 'TO_DO_PROCESSING';\nconst LABEL_TO_DO_LIST_STORAGE = 'dataToDoListJavascript';\n\nlet toDoList = [];\n\nconst onLoad = () =&gt; {\n    try {\n        const dataToDoList = localStorage.getItem(LABEL_TO_DO_LIST_STORAGE);\n        const dataInitial = JSON.parse(dataToDoList);\n        toDoList = Array.isArray(dataInitial) ? dataInitial : [];\n        console.log(toDoList)\n        toDoList.forEach((toDoItem, index) =&gt; {\n            addLiEl(toDoItem);\n        })\n    } catch (e) {\n\n    }\n}\n\nconst onkeydownInput = (event) =&gt; {\n    if (event.key === 'Enter') {\n        clickAddToDo();\n    }\n}\n\nconst clickAddToDo = () =&gt; {\n    const toDoInput = document.getElementById('toDoInput');\n    const toDoText = toDoInput.value;\n    if (toDoText !== '') {\n        const dataToDo = addToDo(toDoText);\n        addLiEl(dataToDo);\n        toDoInput.value = '';\n    }\n}\n\nconst addLiEl = (dataToDo) =&gt; {\n    const id = dataToDo.id;\n    const toDoText = dataToDo.label;\n    const liEle = document.createElement('li')\n    liEle.setAttribute('id', id.toString());\n    if (dataToDo.status === TO_DO_DONE) {\n        liEle.setAttribute('class', 'checked');\n    }\n    liEle.setAttribute('onclick', `toggleStatusToDo(${id})`)\n\n    // span checkIcon\n    const spanChecked = document.createElement('span');\n    spanChecked.setAttribute('class', 'checkedIcon');\n    liEle.appendChild(spanChecked);\n\n    // span label\n    const spanLabel = document.createElement('span');\n    spanLabel.setAttribute('class', 'label');\n    spanLabel.innerText = toDoText;\n    liEle.appendChild(spanLabel);\n\n    // span label\n    const spanClose = document.createElement('span');\n    spanClose.setAttribute('class', 'close');\n    spanClose.setAttribute('onclick', `clickRemoveToDo(${id})`)\n    spanClose.innerText = '×';\n    liEle.appendChild(spanClose);\n\n    document.getElementById('toDoList').prepend(liEle);\n}\n\nconst addToDo = (toDo) =&gt; {\n    const now = new Date();\n    const dataToDo = {\n        id: now.valueOf(),\n        label: toDo,\n        status: TO_DO_PROCESSING,\n        createdAt: now,\n    };\n    toDoList.push(dataToDo)\n    updateDataLocalStorage(toDoList);\n    return dataToDo;\n}\n\nconst clickRemoveToDo = (id) =&gt; {\n    const liEle = document.getElementById(id);\n    liEle.remove();\n    removeToDo(id);\n}\n\nconst removeToDo = (id) =&gt; {\n    toDoList = toDoList.filter((toDoItem, index) =&gt; {\n        return toDoItem.id !== id;\n    })\n    updateDataLocalStorage(toDoList);\n}\n\nconst toggleStatusToDo = (id) =&gt; {\n    const toDoToggle = toDoList.find((toDoItem, index) =&gt; {\n        return toDoItem.id === id;\n    })\n    if (toDoToggle) {\n        const liEle = document.getElementById(id);\n        if (toDoToggle.status === TO_DO_DONE) {\n            liEle.classList.remove('checked');\n        } else {\n            liEle.classList.add('checked')\n        }\n    }\n    onChangeToDoStatus(id);\n}\n\nconst onChangeToDoStatus = (id) =&gt; {\n    toDoList = toDoList.map((toDoItem, index) =&gt; {\n        if (toDoItem.id === id) {\n            return {\n                ...toDoItem,\n                status: toDoItem.status === TO_DO_DONE ? TO_DO_PROCESSING : TO_DO_DONE\n            }\n        } else {\n            return toDoItem;\n        }\n    })\n    updateDataLocalStorage(toDoList);\n}\n\nconst updateDataLocalStorage = (toDoList) =&gt; {\n    localStorage.setItem(LABEL_TO_DO_LIST_STORAGE, JSON.stringify(toDoList))\n}</code>\n</pre>\n\n<p><strong>Source Code :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://github.com/trandinhthang99/todolist-javascript\" target=\"_blank\">https://github.com/trandinhthang99/todolist-javascript</a></em></p>\n\n<p><strong>Demo :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://trandinhthang99.github.io/todolist-javascript/\" target=\"_blank\">https://trandinhthang99.github.io/todolist-javascript/</a></em></p>\n"
    },
    {
        "title": "Sử dụng Flutter, cơ sở dữ liệu SQLite tạo ứng dụng To Do List",
        "description": "Xây dựng ứng dụng quốc dân với công nghệ đa nền tảng mới - Flutter, dựa trên ngôn ngữ hướng đối Dart.  Sử dụng hệ quản cơ sở dữ liệu SQLite",
        "thumbnail": "https://drive.google.com/uc?export=view&id=1olwPc9uDDnYYBH-4rRdT5nJaX1cDsncY",
        "publishDate": "2021-09-18T17:00:00.108Z",
        "category": 2,
        "tags": [
            5,
            7,
            8
        ],
        "hide": false,
        "slug": "build-todolist-app-flutter-sqlite",
        "id": 4,
        "dateCreatedAt": "2021-09-12T05:20:14.137Z",
        "dateUpdatedAt": "2021-09-18T15:13:54.540Z",
        "content": "Ở b&agrave;i viết n&agrave;y m&igrave;nh sẽ x&acirc;y dụng ứng dụng di động quốc d&acirc;n To Do List bằng Flutter v&agrave; hệ quản trị cơ sở dữ liệu SQLite. Cũng như c&aacute;c b&agrave;i viết kh&aacute;c m&igrave;nh sẽ c&ugrave;ng t&igrave;m hiểu sơ qua về định nghĩa của 1 ứng dụng To Do List.\n<h3><strong>ToDoList App l&agrave; g&igrave; ?</strong></h3>\n\n<p>ToDoList App l&agrave; một ứng dụng&nbsp; quản l&yacute; danh s&aacute;ch c&aacute;c c&ocirc;ng việc cần được thưc hiện. Đ&acirc;y l&agrave; ứng dụng đầu ti&ecirc;n m&igrave;nh l&agrave;m khi m&igrave;nh học bất cứ 1 c&ocirc;ng nghệ n&agrave;o mới như Flutter, React, Vue, Node,... B&agrave;i viết n&agrave;y m&igrave;nh sẽ x&acirc;y dựng ứng dụng ToDoList bằng React JS.</p>\n\n<h3 style=\"text-align:center\"><u><strong>Demo To Do List App</strong></u></h3>\n\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Ew76XAUC2pMnaC_GOCikznZRLAK6yIW3\" style=\"height:977px; width:500px\" /></p>\n\n<div style=\"text-align:center\"><strong><a href=\"https://drive.google.com/uc?export=view&amp;id=1St30TiH7wMUfH4qPsPhQNUfzo-jx3-pm\" target=\"_blank\">Tải file APK</a></strong></div>\n\n<h3><strong>Một ch&uacute;t th&ocirc;ng tin về Flutter :</strong></h3>\nFlutter l&agrave; một SDK ph&aacute;t triển ứng dụng di động nguồn mở được tạo ra bởi Google.&nbsp;Flutter l&agrave; bộ c&ocirc;ng cụ giao diện người d&ugrave;ng để x&acirc;y dựng c&aacute;c ứng dụng đẹp, được bi&ecirc;n dịch nguy&ecirc;n bản cho thiết bị di động, web, m&aacute;y t&iacute;nh để b&agrave;n v&agrave; thiết bị nh&uacute;ng từ một cơ sở m&atilde; duy nhất ( ứng dụng đa nền tảng ).<br />\n<strong>3 điểm nổi bật nhất của Flutter :</strong>\n\n<ul>\n\t<li><strong>Ph&aacute;t triển nhanh</strong> :&nbsp;<em>L&agrave;m cho ứng dụng của bạn trở n&ecirc;n sống động chỉ trong mili gi&acirc;y với t&iacute;nh năng Tải lại trạng th&aacute;i n&oacute;ng. Sử dụng một tập hợp phong ph&uacute; c&aacute;c vật dụng ho&agrave;n to&agrave;n c&oacute; thể t&ugrave;y chỉnh để tạo giao diện gốc trong v&agrave;i ph&uacute;t.</em></li>\n\t<li><strong>Giao diện người d&ugrave;ng linh hoạt</strong> :&nbsp;<em>Nhanh ch&oacute;ng cung cấp c&aacute;c t&iacute;nh năng tập trung v&agrave;o trải nghiệm người d&ugrave;ng cuối nguy&ecirc;n bản. Kiến tr&uacute;c ph&acirc;n lớp cho ph&eacute;p t&ugrave;y chỉnh đầy đủ, dẫn đến kết xuất cực kỳ nhanh ch&oacute;ng v&agrave; c&aacute;c thiết kế biểu cảm v&agrave; linh hoạt.</em></li>\n\t<li><strong>Hiệu suất cao</strong> :&nbsp;<em>C&aacute;c tiện &iacute;ch con của Flutter kết hợp tất cả c&aacute;c điểm kh&aacute;c biệt quan trọng của nền tảng như cuộn, điều hướng, biểu tượng v&agrave; ph&ocirc;ng chữ để mang lại hiệu suất gốc đầy đủ tr&ecirc;n cả iOS v&agrave; Android.</em></li>\n</ul>\n\n<h3><strong>Cơ sở dữ liệu SQLite :</strong></h3>\n\n<p>SQLite l&agrave; hệ thống cơ sở dữ liệu quan hệ nhỏ gọn, ho&agrave;n chỉnh, c&oacute; thể c&agrave;i đặt b&ecirc;n trong c&aacute;c tr&igrave;nh ứng dụng kh&aacute;c. SQLite được Richard Hipp viết dưới dạng thư viện bằng ng&ocirc;n ngữ lập tr&igrave;nh C.<br />\n<strong>Ưu điểm :</strong></p>\n\n<ul>\n\t<li>Tin cậy: c&aacute;c hoạt động transaction (chuyển giao) nội trong cơ sở dữ liệu được thực hiện trọn vẹn, kh&ocirc;ng g&acirc;y lỗi khi xảy ra sự cố phần cứng</li>\n\t<li>Tu&acirc;n theo chuẩn SQL92 (chỉ c&oacute; một v&agrave;i đặc điểm kh&ocirc;ng hỗ trợ)</li>\n\t<li>Kh&ocirc;ng cần c&agrave;i đặt cấu h&igrave;nh</li>\n\t<li>K&iacute;ch thước chương tr&igrave;nh gọn nhẹ, với cấu h&igrave;nh đầy đủ chỉ kh&ocirc;ng đầy 300 kB</li>\n\t<li>Thực hiện c&aacute;c thao t&aacute;c đơn giản nhanh hơn c&aacute;c hệ thống cơ sở dữ liệu kh&aacute;ch/chủ kh&aacute;c</li>\n\t<li>Kh&ocirc;ng cần phần mềm phụ trợ</li>\n\t<li>Phần mềm tự do với m&atilde; nguồn mở, được ch&uacute; th&iacute;ch r&otilde; r&agrave;ng</li>\n</ul>\n\n<h3><strong>Cấu tr&uacute;c project :</strong></h3>\n\n<ul>\n\t<li>\n\t<h3><strong>todolist-flutter-sqlite</strong></h3>\n\n\t<ul>\n\t\t<li>\n\t\t<p><em>lib</em></p>\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t<p><em>main.dart</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>model_todo.dart</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>db_todo.dart</em></p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t<p><em>constants.dart</em></p>\n\t\t\t</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>\n\t\t<p><em>pubspec.yaml</em></p>\n\t\t</li>\n\t\t<li>\n\t\t<p><em>...</em></p>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<h3><strong>Khai b&aacute;o c&aacute;c constants :</strong></h3>\n\n<pre>\n<code>const String toDoDone = 'TO_DO_DONE';\nconst String toDoProcessing = 'TO_DO_PROCESSING';</code>\n</pre>\n<strong>Tạo Model ToDo :</strong>\n\n<pre>\n<code>class ToDo {\n\tfinal int ? id;\n\tfinal String status;\n\tfinal String label;\n\tfinal DateTime createdAt;\n\tToDo({\n\t\tthis.id,\n\t\trequired this.status,\n\t\trequired this.label,\n\t\trequired this.createdAt\n\t});\n\n\tToDo copy({\n\t\t\tint ? id,\n\t\t\tString ? status,\n\t\t\tString ? label,\n\t\t\tDateTime ? createdAt,\n\t\t}) =&gt;\n\t\tToDo(\n\t\t\tid: id ?? this.id,\n\t\t\tstatus: status ?? this.status,\n\t\t\tlabel: label ?? this.label,\n\t\t\tcreatedAt: createdAt ?? this.createdAt,\n\t\t);\n\n\tMap &lt; String, dynamic &gt; toJson() =&gt; {\n\t\t'id': id,\n\t\t'status': status,\n\t\t'label': label,\n\t\t'createdAt': createdAt.toIso8601String()\n\t};\n\n\tToDo.fromJson(Map &lt; String, dynamic &gt; json): id = json['id'] ?? 0,\n\t\tstatus = json['status'],\n\t\tlabel = json['label'],\n\t\tcreatedAt = DateTime.parse(json['createdAt'] as String);\n\t@override\n\n\tString toString() {\n\t\treturn '\"topic\":'\n\t\t'{'\n\t\t'\"id\": $id, '\n\t\t'\"status\": $status, '\n\t\t'\"label\": $label, '\n\t\t'\"createdAt\": $createdAt, '\n\t\t'}';\n\t}\n}</code>\n</pre>\n\n<h3><strong>Thiết lập SQLite database :</strong></h3>\n\n<pre>\n<code>import 'package:sqflite/sqflite.dart';\nimport 'dart:io'\nas io;\nimport 'package:path_provider/path_provider.dart';\nimport 'package:path/path.dart';\nimport 'package:todolist_flutter_sqlite/model_todo.dart';\n\nclass DBToDo {\n\tstatic final DBToDo instance = DBToDo._init();\n\tstatic Database ? _db;\n\tDBToDo._init();\n\tstatic\n\tconst String table = 'Topic';\n\tstatic\n\tconst String dbName = 'db_todo.db';\n\n\tstatic\n\tconst String idCol = 'id';\n\tstatic\n\tconst String statusCol = 'status';\n\tstatic\n\tconst String labelCol = 'label';\n\tstatic\n\tconst String createdAtCol = 'createdAt';\n\n\n\tFuture &lt; Database ? &gt; get db async {\n\t\tif (_db != null) {\n\t\t\treturn _db;\n\t\t}\n\t\t_db = await initDb();\n\t\treturn _db!;\n\t}\n\n\tinitDb() async {\n\t\tfinal dbPath = await getDatabasesPath();\n\t\tString path = join(dbPath, dbName);\n\t\tvar db = await openDatabase(path, version: 1, onCreate: _onCreate);\n\t\treturn db;\n\t}\n\n\t_onCreate(Database db, int version) async {\n\t\tawait db.execute(\"CREATE TABLE $table ($idCol INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, $statusCol TEXT NOT NULL, $labelCol TEXT NOT NULL, $createdAtCol TEXT NOT NULL)\");\n\t}\n\n\tFuture &lt; ToDo &gt; save(ToDo toDo) async {\n\t\tvar dbClient = await instance.db;\n\t\tfinal id = await dbClient!.insert(table, toDo.toJson());\n\t\treturn toDo.copy(id: id);\n\t}\n\n\tFuture &lt; List &lt; ToDo &gt;&gt; getToDoList() async {\n\t\tvar dbClient = await instance.db;\n\t\tList &lt; Map &lt; String, dynamic &gt;&gt; maps = await dbClient!.query(table, orderBy: \"$idCol DESC\", columns: [idCol, statusCol, labelCol, createdAtCol]);\n\t\tList &lt; ToDo &gt; todoList = [];\n\t\tfor (int i = 0; i &lt; maps.length; i++) {\n\t\t\ttodoList.add(ToDo.fromJson(maps[i]));\n\t\t}\n\t\treturn todoList;\n\t}\n\n\tFuture &lt; int &gt; delete(int ? id) async {\n\t\tvar dbClient = await instance.db;\n\t\treturn await dbClient!.delete(table, where: '$idCol = ?', whereArgs: [id]);\n\t}\n\n\tFuture &lt; int &gt; update(ToDo toDo) async {\n\t\tvar dbClient = await instance.db;\n\t\treturn await dbClient!.update(table, toDo.toJson(),\n\t\t\twhere: '$idCol = ?', whereArgs: [toDo.id]);\n\t}\n\n\tFuture &lt; ToDo ? &gt; show(int ? id) async {\n\t\tvar dbClient = await instance.db;\n\t\tList &lt; Map &lt; String, dynamic &gt;&gt; maps = await dbClient!.query(table, where: '$idCol = ?', whereArgs: [id], columns: [idCol, statusCol, labelCol, createdAtCol]);\n\t\tif (maps.isNotEmpty) {\n\t\t\treturn ToDo.fromJson(maps[0]);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tFuture close() async {\n\t\tvar dbClient = await instance.db;\n\t\tdbClient!.close();\n\t}\n}</code>\n</pre>\n\n<h3><strong>Khai b&aacute;o state toDoList :</strong></h3>\n\n<pre>\n<code> List&lt;ToDo&gt; _toDoList = [];</code>\n</pre>\n\n<h3><strong>dispose() được gọi khi đối tượng State bị x&oacute;a vĩnh viễn :</strong></h3>\n\n<pre>\n<code>@override\nvoid dispose() {\n\t_toDoTextController.dispose();\n\tDBToDo.instance.close();\n\tsuper.dispose();\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m cập nhật lại danh s&aacute;ch ToDoList :</strong></h3>\n\n<pre>\n<code>Future refreshToDoList() async {\n\tDBToDo.instance.getToDoList().then((value) {\n\t\tsetState(() {\n\t\t\t_toDoList = value;\n\t\t});\n\t});\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m th&ecirc;m mới 1 ToDo :</strong></h3>\n\n<pre>\n<code>addToDo() async {\n\tString label = _toDoTextController.text;\n\tif (label != \"\") {\n\t\tDateTime now = DateTime.now();\n\t\tToDo toDo = ToDo(\n\t\t\tstatus: toDoProcessing,\n\t\t\tlabel: label,\n\t\t\tcreatedAt: now\n\t\t);\n\t\t_toDoTextController.clear();\n\t\tawait DBToDo.instance.save(toDo);\n\t\trefreshToDoList();\n\t\tFocusScope.of(context).requestFocus(nodeToDoInput);\n\t}\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m thay đổi trạng th&aacute;i 1 ToDo :</strong></h3>\n\n<pre>\n<code>_toggleToDoStatus(ToDo toDo) async {\n\tToDo toDoUpdate = toDo.copy(\n\t\tstatus: toDo.status == toDoDone ? toDoProcessing : toDoDone\n\t);\n\tawait DBToDo.instance.update(toDoUpdate);\n\trefreshToDoList();\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m x&oacute;a 1 ToDo :</strong></h3>\n\n<pre>\n<code>_deleteToDo(ToDo toDo) async {\n\tawait DBToDo.instance.delete(toDo.id);\n\trefreshToDoList();\n}</code>\n</pre>\n\n<h3><strong>H&agrave;m render toDoList :</strong></h3>\n\n<pre>\n<code>List &lt; Container &gt; _listToDoContainer() {\n\tList &lt; Container &gt; listContainer = [];\n\t_toDoList.asMap().forEach((index, ToDo toDoItem) {\n\t\tlistContainer.add(\n\t\t\tContainer(\n\t\t\t\tpadding: const EdgeInsets.symmetric(\n\t\t\t\t\t\tvertical: 5,\n\t\t\t\t\t),\n\t\t\t\t\tchild: ElevatedButton(\n\t\t\t\t\t\tstyle: ElevatedButton.styleFrom(\n\t\t\t\t\t\t\tonPrimary: const Color(0xFFdddddd),\n\t\t\t\t\t\t\t\tprimary: toDoItem.status == toDoDone ?\n\t\t\t\t\t\t\t\tconst Color(0xFF7f7c82): index % 2 == 0 ?\n\t\t\t\t\t\t\t\t\tconst Color(0xFFf9f9f9): const Color(0xFFeeeeee),\n\t\t\t\t\t\t\t\t\t\tpadding: const EdgeInsets.symmetric(\n\t\t\t\t\t\t\t\t\t\t\tvertical: 0,\n\t\t\t\t\t\t\t\t\t\t\thorizontal: 0\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tonPressed: () {\n\t\t\t\t\t\t\t_toggleToDoStatus(toDoItem);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchild: Container(\n\t\t\t\t\t\t\tpadding: const EdgeInsets.symmetric(\n\t\t\t\t\t\t\t\t\tvertical: 5,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tchild: Row(\n\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\tContainer(\n\t\t\t\t\t\t\t\t\t\t\twidth: 40,\n\t\t\t\t\t\t\t\t\t\t\tchild: toDoItem.status == toDoDone ?\n\t\t\t\t\t\t\t\t\t\t\tconst Icon(\n\t\t\t\t\t\t\t\t\t\t\t\tIcons.check,\n\t\t\t\t\t\t\t\t\t\t\t\tsize: 16,\n\t\t\t\t\t\t\t\t\t\t\t): null,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tExpanded(\n\t\t\t\t\t\t\t\t\t\t\tchild: Text(\n\t\t\t\t\t\t\t\t\t\t\t\ttoDoItem.label,\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: googleFontHandlee(\n\t\t\t\t\t\t\t\t\t\t\t\t\tTextStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: toDoItem.status == toDoDone ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst Color(0xFFFFFFFF): const Color(0xFF000000),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecoration: toDoItem.status == toDoDone ? TextDecoration.lineThrough : null\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tGestureDetector(\n\t\t\t\t\t\t\t\t\t\t\tonTap: () {\n\t\t\t\t\t\t\t\t\t\t\t\t_deleteToDo(toDoItem);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tchild: SizedBox(\n\t\t\t\t\t\t\t\t\t\t\t\theight: 50,\n\t\t\t\t\t\t\t\t\t\t\t\twidth: 50,\n\t\t\t\t\t\t\t\t\t\t\t\tchild: Icon(\n\t\t\t\t\t\t\t\t\t\t\t\t\tIcons.close,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize: 16,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: toDoItem.status == toDoDone ?\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst Color(0xFFFFFFFF): const Color(0xFF000000),\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t)\n\t\t);\n\t});\n\treturn listContainer;\n}</code>\n</pre>\n\n<h3><strong>File main.dart :</strong></h3>\n\n<pre>\n<code>import 'package:flutter/material.dart';\nimport 'package:google_fonts/google_fonts.dart';\nimport 'package:todolist_flutter_sqlite/model_todo.dart';\nimport 'package:intl/intl.dart';\n\nimport 'constants.dart';\nimport 'db_todo.dart';\n\n\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n      ),\n      home: const ToDoApp(),\n    );\n  }\n}\n\nclass ToDoApp extends StatefulWidget {\n  const ToDoApp({Key? key}) : super(key: key);\n\n  @override\n  _ToDoAppState createState() =&gt; _ToDoAppState();\n}\n\nclass _ToDoAppState extends State&lt;ToDoApp&gt; {\n  FocusNode nodeToDoInput = FocusNode();\n  final TextEditingController _toDoTextController = TextEditingController(text: \"\");\n  List&lt;ToDo&gt; _toDoList = [];\n  @override\n  void initState() {\n    super.initState();\n    refreshToDoList();\n  }\n\n  @override\n  void dispose() {\n    _toDoTextController.dispose();\n    DBToDo.instance.close();\n    super.dispose();\n  }\n\n  Future refreshToDoList() async {\n    DBToDo.instance.getToDoList().then((value) {\n      setState(() {\n        _toDoList = value;\n      });\n    });\n  }\n\n  addToDo() async {\n    String label = _toDoTextController.text;\n    if (label != \"\") {\n      DateTime now = DateTime.now();\n      ToDo toDo = ToDo(\n        status: toDoProcessing,\n        label: label,\n        createdAt: now\n      );\n      _toDoTextController.clear();\n      await DBToDo.instance.save(toDo);\n      refreshToDoList();\n      FocusScope.of(context).requestFocus(nodeToDoInput);\n    }\n  }\n\n  _toggleToDoStatus(ToDo toDo) async {\n    ToDo toDoUpdate = toDo.copy(\n      status: toDo.status == toDoDone ? toDoProcessing : toDoDone\n    );\n    await DBToDo.instance.update(toDoUpdate);\n    refreshToDoList();\n  }\n\n  _deleteToDo(ToDo toDo) async {\n    await DBToDo.instance.delete(toDo.id);\n    refreshToDoList();\n  }\n\n\n  List&lt;Container&gt; _listToDoContainer() {\n    List&lt;Container&gt; listContainer = [];\n    _toDoList.asMap().forEach((index, ToDo toDoItem) {\n      listContainer.add(\n        Container(\n            padding: const EdgeInsets.symmetric(\n              vertical: 5,\n            ),\n            child: ElevatedButton(\n              style: ElevatedButton.styleFrom(\n                onPrimary: const Color(0xFFdddddd),\n                primary: toDoItem.status == toDoDone ? const Color(0xFF7f7c82) : index%2 == 0 ? const Color(0xFFf9f9f9) : const Color(0xFFeeeeee),\n                padding: const EdgeInsets.symmetric(\n                    vertical: 0,\n                    horizontal: 0\n                )\n              ),\n              onPressed: () {\n                _toggleToDoStatus(toDoItem);\n              },\n              child: Container(\n                padding: const EdgeInsets.symmetric(\n                  vertical: 5,\n                ),\n                child: Row(\n                  children: [\n                   Container(\n                     width: 40,\n                     child: toDoItem.status == toDoDone ? const Icon(\n                       Icons.check,\n                       size: 16,\n                     ) : null,\n                   ),\n                    Expanded(\n                      child: Text(\n                        toDoItem.label,\n                        style: googleFontHandlee(\n                            TextStyle(\n                            color: toDoItem.status == toDoDone ? const Color(0xFFFFFFFF) : const Color(0xFF000000),\n                              decoration: toDoItem.status == toDoDone ? TextDecoration.lineThrough : null\n                          )\n                        ),\n                      ),\n                    ),\n                    GestureDetector(\n                      onTap: () {\n                        _deleteToDo(toDoItem);\n                      },\n                      child: SizedBox(\n                        height: 50,\n                        width: 50,\n                        child: Icon(\n                          Icons.close,\n                          size: 16,\n                          color: toDoItem.status == toDoDone ? const Color(0xFFFFFFFF) : const Color(0xFF000000),\n                        ),\n                      ),\n                    )\n                  ],\n                ),\n              ),\n            ),\n          )\n      );\n    });\n    return listContainer;\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Size size = MediaQuery.of(context).size;\n\n    return Scaffold(\n      resizeToAvoidBottomInset: false,\n      body: Container(\n        height: size.height,\n        width: size.width,\n        decoration: const BoxDecoration(\n            color: Color(0xFFf3f1f5)\n        ),\n        padding: const EdgeInsets.symmetric(\n          vertical: 40,\n          horizontal: 10\n        ),\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: &lt;Widget&gt;[\n            Container(\n              height: 180,\n              width: size.width,\n              decoration: const BoxDecoration(\n                color: Color(0xFF22577a)\n              ),\n              padding: const EdgeInsets.symmetric(\n                horizontal: 20\n              ),\n              child: Column(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  Text(\n                    \"To Do List - Flutter &amp; SQLite\",\n                    style: googleFontHandlee(\n                      const TextStyle(\n                          color: Color(0xFFFFFFFF),\n                          fontWeight: FontWeight.w500,\n                          fontSize: 20\n                      )\n                    ),\n                  ),\n                  const SizedBox(\n                    height: 20,\n                  ),\n                  Row(\n                    children: [\n                      Expanded(\n                        child: Container(\n                          height: 40,\n                          decoration: const BoxDecoration(\n                              color: Color(0xFFFFFFFF)\n                          ),\n                          child: TextField(\n                            autofocus: true,\n                            focusNode: nodeToDoInput,\n                            controller: _toDoTextController,\n                            style: googleFontHandlee(\n                              const TextStyle(\n\t\t\t\t\t\t\t\t  \n                              )\n                            ),\n                            decoration: const InputDecoration(\n                                hintText: \"Title ...\",\n                                border: InputBorder.none,\n                                fillColor: Color(0xFFFFFFFF),\n                                filled: true\n                            ),\n                            onSubmitted: (value) {\n                              addToDo();\n                            },\n                          ),\n                        ),\n                      ),\n                      GestureDetector(\n                        onTap: () {\n                          addToDo();\n                        },\n                        child: Container(\n                          width: 60,\n                          height: 40,\n                          alignment: Alignment.center,\n                          color: const Color(0xFF9d9d9d),\n                          child: Text(\n                            \"Add\",\n                            style: googleFontHandlee(\n                              const TextStyle(\n                                  color: Color(0xFFFFFFFF),\n                                  fontWeight: FontWeight.w600\n                              )\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  )\n                ],\n              ),\n            ),\n            // body\n            Container(\n              height: size.height - 80 - 180,\n              child: ListView(\n                  shrinkWrap: true,\n                  children: _listToDoContainer()\n              ),\n            )\n          ],\n        ),\n      )\n    );\n  }\n}\n\nTextStyle googleFontHandlee(TextStyle textStyle) {\n  return GoogleFonts.handlee(\n    textStyle: textStyle,\n  );\n}</code>\n</pre>\n\n<p><strong>Source Code :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://github.com/trandinhthang99/todolist-flutter-sqlite\" target=\"_blank\">https://github.com/trandinhthang99/todolist-flutter-sqlite</a></em></p>\n\n<p><strong>APK File :</strong>&nbsp;</p>\n\n<p><em><a href=\"https://drive.google.com/uc?export=view&amp;id=1St30TiH7wMUfH4qPsPhQNUfzo-jx3-pm\" target=\"_blank\">To Do List App</a></em></p>\n\n<p>&nbsp;</p>\n"
    },
    {
        "title": "English App - Giới thiệu Web App học giúp nâng cao kỹ năng đọc và nói tiếng Anh",
        "description": "English App - Cung cấp các bài đọc và đoạn hôi thoại tiếng Anh theo từng chủ đề, và từng cấp độ ( beginner,  intermediate ), được viết bằng React Js, data của website được crawl từ website www.eslfast.com",
        "thumbnail": "https://drive.google.com/uc?export=view&id=1x7EUUnv1IAX1zOJi93aw6qau9AonXfVz",
        "publishDate": "2021-09-25T17:00:00.360Z",
        "category": 1,
        "tags": [
            6,
            2,
            3,
            4,
            10
        ],
        "hide": false,
        "slug": "introduction-english-app-read-speak",
        "id": 5,
        "dateCreatedAt": "2021-09-18T15:24:04.989Z",
        "dateUpdatedAt": "2021-09-22T18:40:22.198Z",
        "content": "<strong>Hey you!</strong><br />\nLại l&agrave; m&igrave;nh đ&acirc;y, b&agrave;i viết m&igrave;nh sẽ giới thiệu về web app English App - cung cấp c&aacute;c b&agrave;i đọc v&agrave; c&aacute;c đoạn hội thoại tiếng anh theo chủ đề v&agrave; theo từng cấp độ ( beginner, intermediate ).<br />\n<u><em><strong>!!! M&igrave;nh kh&ocirc;ng c&oacute; quyền sở hữu bất cứ data dạng audio v&agrave; text n&agrave;o của c&aacute;c b&agrave;i học.</strong></em></u><br />\n<br />\nM&igrave;nh viết web app n&agrave;y chỉ mong muốn cung cấp một c&aacute;ch học tiếng Anh cho những người đang nỗ lực chinh phục thử th&aacute;ch tiếng Anh, để c&oacute; nhiều cơ hội hơn trong c&ocirc;ng việc v&agrave; cuộc sống.&nbsp;<br />\n<br />\nDưới đ&acirc;y m&igrave;nh sẽ tr&igrave;nh b&agrave;y ngắn gon c&aacute;ch m&igrave;nh tạo ra web app <a href=\"https://trandinhthang99.github.io/english-app/\" target=\"_blank\">&quot;English App&quot;</a> n&agrave;y.\n<h3><u><strong>&Yacute; tưởng :</strong></u></h3>\nĐể c&oacute; đươc c&aacute;c b&agrave;i học như tr&ecirc;n việc đầu ti&ecirc;n m&igrave;nh cần l&agrave;m đ&oacute; l&agrave; l&ecirc;n &yacute; tưởng. &Yacute; tưởng th&igrave; đến cũng rất t&igrave;nh cờ, trong một l&ecirc;n mạng t&igrave;m kiếm c&aacute;c t&agrave;i liệu học tiếng Anh - m&igrave;nh mới v&agrave;o website&nbsp;<a href=\"https://www.eslfast.com/\" target=\"_blank\">https://www.eslfast.com/</a>&nbsp;v&agrave; nhận được nhiều t&agrave;i liệu hay. Tuy nhi&ecirc;n trải nghiệm người d&ugrave;ng tr&ecirc;n website kh&aacute; kh&oacute; cho người d&ugrave;ng, từ đ&oacute; &yacute; tưởng được tạo ra, tạo ra web app dựa tr&ecirc;n dữ liệu của website n&agrave;y , &quot;chất lượng của c&aacute;c b&agrave;i đọc v&agrave; đoạn hội thoại được đảm bảo m&agrave; trải nghiệm người d&ugrave;ng tốt &quot;.<br />\n<br />\n&Yacute; tưởng đ&atilde; được nảy ra,&nbsp; m&igrave;nh bất tay v&agrave;o việc crawl data từ website n&agrave;y. M&igrave;nh kh&ocirc;ng phải một &quot;Python Programmer chuy&ecirc;n nghiệp&quot; tuy nhi&ecirc;n với lương kiến thức tự học được v&agrave; th&ocirc;ng qua kiến thức về crawl dữ liệu website m&igrave;nh nhận được từ <strong>ĐỒ &Aacute;N 1</strong> tr&ecirc;n trường <strong><a href=\"https://www.hust.edu.vn/\" target=\"_blank\">HUST</a></strong> của m&igrave;nh.&nbsp;\n\n<h3><u><strong>Thu thập v&agrave; xử l&yacute; dữ liệu :</strong></u></h3>\nNguồn dữ liệu :&nbsp;<a href=\"http://www.eslfast.com/\" target=\"_blank\">www.eslfast.com/</a><br />\nM&igrave;nh d&ugrave;ng python để thực hiện việc thu thập dữ liệu v&agrave; xử l&yacute; dữ liệu thu thập dữ liệu được.&nbsp;<br />\n<br />\n<strong>C&aacute;c thư viện m&igrave;nh sử dụng :</strong><br />\n<a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\" target=\"_blank\">Beautiful Soup</a><br />\nThư viện BeautifulSoup l&agrave; một thư viện của Python cho ph&eacute;p ch&uacute;ng ta lấy dữ liệu từ HTML đơn giản v&agrave; hiệu quả. Dựa v&agrave;o những đặc điểm của HTML Source, ta c&oacute; thể tr&iacute;ch xuất ra được những dữ liệu ch&uacute;ng ta cần.<br />\nV&iacute; dụ :<br />\nTa c&oacute; thể từ một đoạn code khoảng 20 d&ograve;ng ta c&oacute; thể lấy nội dụng của h&agrave;ng triệu b&agrave;i b&aacute;o.<br />\nHay trong qu&aacute; tr&igrave;nh chuẩn bị dữ liệu cho web app n&agrave;y m&igrave;nh để lấy v&agrave; xử l&yacute; dữ liệu, để c&oacute; được audio của c&aacute;c b&agrave;i đọc v&agrave; b&agrave;i n&oacute;i, việc đầu ti&ecirc;n m&igrave;nh phải l&agrave;m đ&oacute; l&agrave; lấy được link của audio đ&oacute;. Việc lấy link m&igrave;nh sẽ được m&igrave;nh xử l&yacute; bằng thư viện BeautifulSoup.<br />\n<a href=\"https://docs.python.org/3/library/json.html\" target=\"_blank\">Json</a><br />\nThư viện Json để m&igrave;nh lưu dữ liệu m&igrave;nh thu thập được v&agrave;o file Json để&nbsp; khi code App sẽ d&ugrave;ng dữ liệu đ&oacute; th&ocirc;ng qua file JSON.\n<h3><u><strong>Code App :</strong></u></h3>\nỨng dụng n&agrave;y được m&igrave;nh viết bằng React Js. Đ&acirc;y l&agrave; một ứng dụng kh&aacute; cơ bản.\n\n<h3 style=\"text-align:center\"><u><strong>DEMO APP</strong></u></h3>\n<iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/english-app/\" width=\"1200\"></iframe>\n\n<h3 style=\"text-align:center\"><strong><u>C&Agrave;I ĐẶT APP TR&Ecirc;N ĐI&Ecirc;N THOẠI</u></strong></h3>\n\n<div style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1dmYf8EBo2gFut2_mdUd6HjMzxMlMGYqx\" style=\"height:1173px; width:600px\" /></div>\n\n<h4 style=\"text-align:center\"><strong>Một số ảnh chụp m&agrave;n h&igrave;nh của Web App</strong></h4>\n\n<div style=\"text-align:center\"><img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1Jx6U7EOiRUyTAKRjszXaLYH-wWeCzkk5\" style=\"height:957px; width:500px\" /><br />\n<br />\n---<br />\n<br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1K3fAE9KDFl4NmmhWw0rReIL2SEtv74gO\" style=\"height:967px; width:500px\" /><br />\n<br />\n---<br />\n<br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1KKwRioOE4ly3XthaKSgmWexdqw7XxhSQ\" style=\"height:963px; width:500px\" /><br />\n<br />\n---<br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1KMCjeBEYR-4rNcmWisQdnaafY8jdVjM7\" style=\"height:958px; width:500px\" /><br />\n<br />\n---<br />\n<br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1KLS53yy9AFzS9k2SAq-7gci3gKY_Noov\" style=\"height:967px; width:500px\" /></div>\n"
    },
    {
        "title": "Xây dựng React Infinite Scrolling and Lazy Loading - Call Data từ API",
        "description": "React Infinite Scrolling and Lazy Loading - Một Task rất hay gặp khi trong các dự án web application thực tế.",
        "thumbnail": "https://drive.google.com/uc?export=view&id=18OK6UYkoOLJKOIwSWrrPiK-OpuzWX78f",
        "publishDate": "2021-10-02T17:00:00.111Z",
        "category": 1,
        "tags": [
            6,
            3,
            2,
            4
        ],
        "hide": false,
        "slug": "react-infinite-scrolling-and-lazy-loading",
        "id": 6,
        "dateCreatedAt": "2021-09-18T16:16:26.413Z",
        "dateUpdatedAt": "2021-09-22T18:48:17.692Z",
        "content": "<strong>Hey you!</strong><br />\nLại l&agrave; m&igrave;nh đ&acirc;y!<br />\n<br />\nTrong b&agrave;i viết n&agrave;y m&igrave;nh xin chia sẻ qu&aacute; tr&igrave;nh m&igrave;nh l&agrave;m task - <strong>React Infinite Scrolling and Lazy Loading</strong>.\n<div style=\"text-align:center\"><u><strong>Demo&nbsp;React Infinite Scrolling and Lazy Loading<br />\n<iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/react-infinite-scrolling-and-lazy-loading-from-api/\" width=\"1200\"></iframe></strong></u></div>\n\n<h3><strong>Infinite Scrolling l&agrave; g&igrave;?</strong></h3>\n<strong>Infinite Scrolling</strong> l&agrave; một kỹ thuật thiết kế web cho ph&eacute;p người d&ugrave;ng tiếp tục cuộn một trang m&agrave; kh&ocirc;ng cần đến &quot;cuối&quot; của n&oacute;. Thiết lập cuộn v&ocirc; hạn tải nội dung li&ecirc;n tục khi người d&ugrave;ng cuộn xuống trang, cung cấp lượng t&agrave;i liệu ng&agrave;y c&agrave;ng tăng v&agrave; dường như kh&ocirc;ng bao giờ kết th&uacute;c v&agrave; loại bỏ nhu cầu ph&acirc;n trang.<br />\n<strong>V&iacute; dụ về Infinite Scrolling</strong> c&oacute; rất nhiều trong thực tế như &quot;Scrolling Load More&quot; của Facebook v&agrave; YouTube.<br />\nInfinite Scrolling sẽ l&agrave;m tăng trải nhiệm người d&ugrave;ng, thay cho việc ph&acirc;n trang người d&ugrave;ng phải mất thao t&aacute;c di chuyển để button &quot;Next Page&quot; hoặc button &quot;Number Page&quot; rồi click =&gt; l&agrave;m trải nghiệm người d&ugrave;ng bị ảnh hưởng.&nbsp; Việc sử dụng&nbsp;Infinite Scrolling sẽ kh&aacute;c phục được điều đ&oacute;.<br />\n<br />\nTuy nhi&ecirc;n, <strong>nhược điểm của&nbsp;Infinite Scrolling</strong> đ&oacute; l&agrave; khiến người d&ugrave;ng mất thời gian v&agrave; c&ocirc;ng sức nếu muốn nhận được dữ liệu ở gần cuối của danh s&aacute;ch.<br />\n<strong>V&iacute; dụ</strong> : C&ocirc;ng ty Tony Tran c&oacute; khoảng 1000 nh&acirc;n vi&ecirc;n, người d&ugrave;ng muốn nhận được th&ocirc;ng tin của một ai đ&oacute; ở gần cuối danh s&aacute;ch. Nếu sử dụng&nbsp;Infinite Scrolling th&igrave; người d&ugrave;ng phải scrolling rất nhiều lần. Để khắc phục vấn đề n&agrave;y cũng c&oacute; c&aacute;ch.<br />\n=&gt; Kh&ocirc;ng kỹ thuật hay phương ph&aacute;p n&agrave;o l&agrave; ho&agrave;n hảo cả.\n<h3><strong>Lazy Loading l&agrave; g&igrave;?</strong></h3>\n<strong>Lazy loading</strong> l&agrave; 1 kĩ thuật tối ưu khi l&agrave;m web, thay v&igrave; tải to&agrave;n bộ trang web v&agrave; render ngay từ đầu, kỹ thuật n&agrave;y cho ph&eacute;p tải ngay c&aacute;c th&agrave;nh phần cần thiết để hiển thị tới người d&ugrave;ng v&agrave; tr&igrave; ho&atilde;n c&aacute;c t&agrave;i nguy&ecirc;n c&ograve;n lại cho đến khi cần.<br />\nKỹ thuật lazy loading cũng được sử dụng rất nhiều trong thực tế như sử dụng Lazy Loading&nbsp;đối với ảnh, sử dụng Lazy Loading đối với hiển thị component trong React Js, Lazy Loading đối với danh s&aacute;ch.<br />\n<br />\n<strong><u>Lazy Loading&nbsp;đối với ảnh</u></strong><br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=177ARMQPpbpqSbleCSe-r8mmBOxVJKDUw\" style=\"height:444px; width:500px\" /><br />\n<br />\n<u><strong>Lazy Loading đối với danh s&aacute;ch</strong></u><br />\n<img alt=\"\" src=\"https://drive.google.com/uc?export=view&amp;id=1cvlHRFW-Y66kgPnjG3jGxW-GE0u6_gKr\" style=\"height:250px; width:500px\" /><br />\n<br />\nTrong thực tế việc xử l&yacute; dữ liệu trong kỹ thuật&nbsp;Infinite Scrolling and Lazy Loading sẽ căn cứ v&agrave;o y&ecirc;u cầu của dự &aacute;n, c&oacute; thể danh s&aacute;ch dữ liệu sẽ được lấy th&ocirc;ng qua API một lần duy nhất ( allPages ) hoặc việc lấy dữ liệu sẽ được thực hiện th&ocirc;ng qua mỗi lần gọi API với ph&acirc;n trang.<br />\n^^Trong b&agrave;i viết n&agrave;y m&igrave;nh sẽ thực hiện gọi API với ph&acirc;n trang.^^\n<h3><strong>Dưới đ&acirc;y l&agrave; qu&aacute; tr&igrave;nh m&igrave;nh l&agrave;m task n&agrave;y</strong></h3>\nTrước ti&ecirc;n ta phải đi t&igrave;m một API Free n&agrave;o đ&oacute; để lấy dữ liệu. V&agrave; m&igrave;nh chọn&nbsp;<a href=\"https://newsapi.org/\" target=\"_blank\">https://newsapi.org/</a>&nbsp;tuy nhi&ecirc;n API n&agrave;y chỉ sử dụng được với domain localhost ( m&ocirc;i trường development ). Do n&oacute; free m&agrave;. nếu muốn sử dụng với m&ocirc;i trường Production th&igrave; tất nhi&ecirc;n phải bỏ $. Do vậy m&igrave;nh đ&atilde; quyết định tự x&acirc;y dựng API để đỡ phải phụ thuộc họ. V&agrave; m&igrave;nh cũng public tại đ&acirc;y :&nbsp;<a href=\"https://tran-dinh-thang-news-api.herokuapp.com/\" target=\"_blank\">https://tran-dinh-thang-news-api.herokuapp.com/</a><br />\n<strong>M&ocirc; tả về d&ugrave;ng API :</strong><br />\nCung cấp 3 params : q, page, pageSize.<br />\n<em>q : từ kh&oacute;a muốn t&igrave;m kiếm.<br />\npage : trang muốn hiển thị.<br />\npageSize : số lượng dữ liệu hiện thị tối đa một trang.</em><br />\n<br />\n<strong>X&acirc;y dựng&nbsp;Custom Hook&nbsp;useArticlesQuery thực việc xử l&yacute; vấn đề logic v&agrave; gọi API .</strong>\n\n<pre>\n<code>import useArticlesQuery from \"./useArticlesQuery\";\nimport {useCallback, useRef, useState} from \"react\";\nimport { Spin, Input, Col, Row } from 'antd';\nimport \"./assets/css/ArticlesPage.css\";\nimport 'antd/dist/antd.css';\nimport VietnamPicture from \"./assets/images/vietname.jpg\";\n\nconst RenderArticle = (props) =&gt; {\n    const {\n        article\n    } = props;\n    return (\n        &lt;Row&gt;\n            &lt;Col xs={24} sm={24} md={8} lg={6} className=\"article_image_wrapper\"&gt;\n                &lt;img src={article[\"urlToImage\"] ?? VietnamPicture} alt=\"\"/&gt;\n            &lt;/Col&gt;\n            &lt;Col xs={24} sm={24} md={16} lg={18} className=\"article_content\"&gt;\n                &lt;a href={article[\"url\"]} target=\"_blank\" className=\"article_title\"&gt;\n                    {article[\"title\"]}\n                &lt;/a&gt;\n                &lt;div className=\"article_description\"&gt;\n                    {article[\"description\"]}\n                &lt;/div&gt;\n            &lt;/Col&gt;\n        &lt;/Row&gt;\n    )\n}\n\nconst ArticlesPage = (props) =&gt; {\n    const [query, setQuery] = useState('')\n    const [pageNumber, setPageNumber] = useState(1);\n    const {\n        articles,\n        hasMore,\n        loading,\n        error\n    } = useArticlesQuery(query, pageNumber);\n    const observer = useRef();\n    const lastArticlesElementRef = useCallback(node =&gt; {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries =&gt; {\n            if (entries[0].isIntersecting &amp;&amp; hasMore) {\n                setPageNumber(prevPageNumber =&gt; prevPageNumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    console.log(pageNumber)\n    console.log(query)\n    return (\n        &lt;div className=\"articles_page_wrapper\"&gt;\n            &lt;div className=\"articles_page_search\"&gt;\n                &lt;Input.Search value={query} onChange={(event) =&gt; {\n                    setQuery(event.target.value);\n                    setPageNumber(1);\n                }} allowClear style={{ width: 300 }} placeholder=\"Enter keyword ...\" className=\"search_input\"/&gt;\n            &lt;/div&gt;\n            &lt;div className=\"articles_page_body\"&gt;\n                {\n                    articles.map((article, index) =&gt; {\n                        if (articles.length === index + 1) {\n                            return (\n                                &lt;div className=\"article_item\" ref={lastArticlesElementRef}&gt;\n                                    &lt;RenderArticle article={article}/&gt;\n                                &lt;/div&gt;\n                            )\n                        } else {\n                            return (\n                                &lt;div className=\"article_item\"&gt;\n                                    &lt;RenderArticle article={article}/&gt;\n                                &lt;/div&gt;\n                            )\n                        }\n                    })\n                }\n                {\n                    loading ?\n                        &lt;div className=\"loading\"&gt;\n                            &lt;Spin /&gt;\n                        &lt;/div&gt;\n                        :\n                        &lt;&gt;\n                            {articles.length === 0 &amp;&amp; &lt;div&gt;\n                                No article\n                            &lt;/div&gt;}\n                        &lt;/&gt;\n                }\n            &lt;/div&gt;\n        &lt;/div&gt;\n    )\n}\n\nexport default ArticlesPage;</code>\n</pre>\n<br />\n<strong>Tiếp theo ta x&acirc;y dựng giao diện :</strong><br />\n<u><strong><em>JSX</em></strong></u>\n\n<pre>\n<code>&lt;div className=\"articles_page_wrapper\"&gt;\n    &lt;div className=\"articles_page_search\"&gt;\n        &lt;Input.Search value={query} onChange={(event) =&gt; {\n            setQuery(event.target.value);\n            setPageNumber(1);\n        }} allowClear style={{ width: 300 }} placeholder=\"Enter keyword ...\" className=\"search_input\"/&gt;\n    &lt;/div&gt;\n    &lt;div className=\"articles_page_body\"&gt;\n        {\n            articles.map((article, index) =&gt; {\n                if (articles.length === index + 1) {\n                    return (\n                        &lt;div className=\"article_item\" ref={lastArticlesElementRef}&gt;\n                            &lt;RenderArticle article={article}/&gt;\n                        &lt;/div&gt;\n                    )\n                } else {\n                    return (\n                        &lt;div className=\"article_item\"&gt;\n                            &lt;RenderArticle article={article}/&gt;\n                        &lt;/div&gt;\n                    )\n                }\n            })\n        }\n        {\n            loading ?\n                &lt;div className=\"loading\"&gt;\n                    &lt;Spin /&gt;\n                &lt;/div&gt;\n                :\n                &lt;&gt;\n                    {articles.length === 0 &amp;&amp; &lt;div&gt;\n                        No article\n                    &lt;/div&gt;}\n                &lt;/&gt;\n        }\n    &lt;/div&gt;\n&lt;/div&gt;\n\n\n\n// renderArticle\nconst RenderArticle = (props) =&gt; {\n    const {\n        article\n    } = props;\n    return (\n        &lt;Row&gt;\n            &lt;Col xs={24} sm={24} md={8} lg={6} className=\"article_image_wrapper\"&gt;\n                &lt;img src={article[\"urlToImage\"] ?? VietnamPicture} alt=\"\"/&gt;\n            &lt;/Col&gt;\n            &lt;Col xs={24} sm={24} md={16} lg={18} className=\"article_content\"&gt;\n                &lt;a href={article[\"url\"]} target=\"_blank\" className=\"article_title\"&gt;\n                    {article[\"title\"]}\n                &lt;/a&gt;\n                &lt;div className=\"article_description\"&gt;\n                    {article[\"description\"]}\n                &lt;/div&gt;\n            &lt;/Col&gt;\n        &lt;/Row&gt;\n    )\n}</code>\n</pre>\n<u><strong><em>CSS</em></strong></u>\n\n<pre>\n<code>.App {\n    text-align: center;\n}\n\n.App-logo {\n    height: 40vmin;\n    pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n    .App-logo {\n        animation: App-logo-spin infinite 20s linear;\n    }\n}\n\n.App-header {\n    background-color: #282c34;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n}\n\n.App-link {\n    color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n}\n</code>\n</pre>\n<br />\n<strong>Xử l&yacute; việc nhận biết event khi người d&ugrave;ng scroll đến cuối danh s&aacute;ch :</strong>\n\n<pre>\n<code>const [query, setQuery] = useState('')\nconst [pageNumber, setPageNumber] = useState(1);\nconst {\n    articles,\n    hasMore,\n    loading,\n    error\n} = useArticlesQuery(query, pageNumber);\nconst observer = useRef();\nconst lastArticlesElementRef = useCallback(node =&gt; {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries =&gt; {\n        if (entries[0].isIntersecting &amp;&amp; hasMore) {\n            setPageNumber(prevPageNumber =&gt; prevPageNumber + 1)\n        }\n    })\n    if (node) observer.current.observe(node)\n}, [loading, hasMore])</code>\n</pre>\n<br />\n<strong>Đặt ref tại item cuối c&ugrave;ng của danh s&aacute;ch :</strong>&nbsp;\n\n<pre>\n<code>if (articles.length === index + 1) {\n    return (\n        &lt;div className=\"article_item\" ref={lastArticlesElementRef}&gt;\n            &lt;RenderArticle article={article}/&gt;\n        &lt;/div&gt;\n    )\n} else {\n    return (\n        &lt;div className=\"article_item\"&gt;\n            &lt;RenderArticle article={article}/&gt;\n        &lt;/div&gt;\n    )\n}</code>\n</pre>\n<strong>File Source :</strong><br />\n<u><strong>ArticlesPage.js</strong></u>\n\n<pre>\n<code>import useArticlesQuery from \"./useArticlesQuery\";\nimport {useCallback, useRef, useState} from \"react\";\nimport { Spin, Input, Col, Row } from 'antd';\nimport \"./assets/css/ArticlesPage.css\";\nimport 'antd/dist/antd.css';\nimport VietnamPicture from \"./assets/images/vietname.jpg\";\n\nconst RenderArticle = (props) =&gt; {\n    const {\n        article\n    } = props;\n    return (\n        &lt;Row&gt;\n            &lt;Col xs={24} sm={24} md={8} lg={6} className=\"article_image_wrapper\"&gt;\n                &lt;img src={article[\"urlToImage\"] ?? VietnamPicture} alt=\"\"/&gt;\n            &lt;/Col&gt;\n            &lt;Col xs={24} sm={24} md={16} lg={18} className=\"article_content\"&gt;\n                &lt;a href={article[\"url\"]} target=\"_blank\" className=\"article_title\"&gt;\n                    {article[\"title\"]}\n                &lt;/a&gt;\n                &lt;div className=\"article_description\"&gt;\n                    {article[\"description\"]}\n                &lt;/div&gt;\n            &lt;/Col&gt;\n        &lt;/Row&gt;\n    )\n}\n\nconst ArticlesPage = (props) =&gt; {\n    const [query, setQuery] = useState('')\n    const [pageNumber, setPageNumber] = useState(1);\n    const {\n        articles,\n        hasMore,\n        loading,\n        error\n    } = useArticlesQuery(query, pageNumber);\n    const observer = useRef();\n    const lastArticlesElementRef = useCallback(node =&gt; {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries =&gt; {\n            if (entries[0].isIntersecting &amp;&amp; hasMore) {\n                setPageNumber(prevPageNumber =&gt; prevPageNumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    console.log(pageNumber)\n    console.log(query)\n    return (\n        &lt;div className=\"articles_page_wrapper\"&gt;\n            &lt;div className=\"articles_page_search\"&gt;\n                &lt;Input.Search value={query} onChange={(event) =&gt; {\n                    setQuery(event.target.value);\n                    setPageNumber(1);\n                }} allowClear style={{ width: 300 }} placeholder=\"Enter keyword ...\" className=\"search_input\"/&gt;\n            &lt;/div&gt;\n            &lt;div className=\"articles_page_body\"&gt;\n                {\n                    articles.map((article, index) =&gt; {\n                        if (articles.length === index + 1) {\n                            return (\n                                &lt;div className=\"article_item\" ref={lastArticlesElementRef}&gt;\n                                    &lt;RenderArticle article={article}/&gt;\n                                &lt;/div&gt;\n                            )\n                        } else {\n                            return (\n                                &lt;div className=\"article_item\"&gt;\n                                    &lt;RenderArticle article={article}/&gt;\n                                &lt;/div&gt;\n                            )\n                        }\n                    })\n                }\n                {\n                    loading ?\n                        &lt;div className=\"loading\"&gt;\n                            &lt;Spin /&gt;\n                        &lt;/div&gt;\n                        :\n                        &lt;&gt;\n                            {articles.length === 0 &amp;&amp; &lt;div&gt;\n                                No article\n                            &lt;/div&gt;}\n                        &lt;/&gt;\n                }\n            &lt;/div&gt;\n        &lt;/div&gt;\n    )\n}\n\nexport default ArticlesPage;</code>\n</pre>\n<strong><u>useArticlesQuery.js</u></strong>\n\n<pre>\n<code>import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {API_KEY, BASE_API, PAGE_SIZE} from \"./constants\";\n\nexport default function useArticlesQuery(query, pageNumber) {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [articles, setArticles] = useState([]);\n    const [hasMore, setHasMore] = useState(false);\n\n    useEffect(() =&gt; {\n        setArticles([]);\n    }, [query])\n\n    useEffect(() =&gt; {\n        let cancel\n        setLoading(true);\n        setError(false);\n        let url = `${BASE_API}/articles?page=${pageNumber}&amp;pageSize=${PAGE_SIZE}`;\n        if (query) {\n            url += `&amp;q=${query}`\n        }\n        axios({\n            method: 'GET',\n            url: url,\n            cancelToken: new axios.CancelToken(c =&gt; cancel = c)\n        }).then(res =&gt; {\n            setArticles(prevArticles =&gt; {\n                return [...new Set([...prevArticles, ...res.data.articles])]\n            })\n            setHasMore(pageNumber &lt; res.data.maxPerPage)\n            setLoading(false)\n        }).catch(e =&gt; {\n            setLoading(false)\n            setError(true)\n            if (axios.isCancel(e)) return\n        })\n        return () =&gt; cancel()\n    }, [query, pageNumber])\n\n    return { loading, error, articles, hasMore }\n}</code>\n</pre>\n\n<p><strong>Source Code :</strong>&nbsp;</p>\n<em><a href=\"https://github.com/trandinhthang99/react-infinite-scrolling-and-lazy-loading-from-api\" target=\"_blank\">https://github.com/trandinhthang99/react-infinite-scrolling-and-lazy-loading-from-api</a></em>\n\n<p><strong>Demo :</strong></p>\n<em><a href=\"https://trandinhthang99.github.io/react-infinite-scrolling-and-lazy-loading-from-api/\" target=\"_blank\">https://trandinhthang99.github.io/react-infinite-scrolling-and-lazy-loading-from-api/</a></em><br />\n&nbsp;"
    },
    {
        "title": "Cập nhật các web application nho nhỏ",
        "description": "Chia sẻ những dự án nho nhỏ mình làm trong quá trình học tập và làm việc",
        "thumbnail": "https://drive.google.com/uc?export=view&id=1c1puryurbiLtdFVij41AHNM2Ba2yA82X",
        "publishDate": "2021-10-09T17:00:00.968Z",
        "category": 1,
        "tags": [
            2,
            3,
            4,
            6,
            7
        ],
        "hide": false,
        "slug": "update-mini-web-application",
        "id": 7,
        "dateCreatedAt": "2021-09-19T14:31:56.756Z",
        "dateUpdatedAt": "2021-09-22T18:49:07.676Z",
        "content": "<strong>Hey you!</strong><br />\nM&igrave;nh đ&atilde; quay trở lại!<br />\n<br />\nB&agrave;i viết n&agrave;y m&igrave;nh sẽ cập nhật c&aacute;c mini web application m&agrave; m&igrave;nh đ&atilde; thực h&agrave;nh trong qu&aacute; tr&igrave;nh học tập v&agrave; l&agrave;m việc.<br />\n<br />\n<strong><em>UPDATING ...</em></strong>\n<h3><a href=\"https://trandinhthang99.github.io/react-infinite-scrolling-and-lazy-loading-from-api/\" target=\"_blank\"><strong>REACT INFINITE SCROLLING AND LAZY LOADING | 09/2021</strong></a>&nbsp;</h3>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/react-infinite-scrolling-and-lazy-loading-from-api\">https://github.com/trandinhthang99/react-infinite-scrolling-and-lazy-loading-from-api</a><br />\n<strong>API</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/news-api\">https://github.com/trandinhthang99/news-api</a><br />\n<br />\n<iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/react-infinite-scrolling-and-lazy-loading-from-api/\" width=\"1200\"></iframe><br />\n<br />\n<strong><a href=\"https://trandinhthang99.github.io/english-app/\" target=\"_blank\">ENGLISH APP | 09/2021</a><br />\nSource</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/english-app\">https://github.com/trandinhthang99/english-app</a><br />\n<br />\n<strong><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/english-app/\" width=\"1200\"></iframe></strong></p>\n\n<p><br />\n<strong><a href=\"https://trandinhthang99.github.io/todolist-javascript/\" target=\"_blank\">TO DO LIST JAVASCRIPT | 09/2021</a></strong></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/todolist-javascript\">https://github.com/trandinhthang99/todolist-javascript</a><br />\n&nbsp;</p>\n\n<p><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/todolist-javascript/\" width=\"1200\"></iframe><br />\n<br />\n<a href=\"https://trandinhthang99.github.io/todolist-react/\" target=\"_blank\"><strong>TO DO LIST REACT | 09/2021</strong></a></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/todolist-react\">https://github.com/trandinhthang99/todolist-react</a><br />\n<br />\n<a href=\"https://trandinhthang99.github.io/handmade-shop/\"><strong><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/todolist-react/\" width=\"1200\"></iframe></strong></a><br />\n<br />\n<a href=\"https://trandinhthang99.github.io/handmade-shop/\" target=\"_blank\"><strong>HANDMADE SHOP - REACT JS | 9/2021</strong></a></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/handmade-shop\">https://github.com/trandinhthang99/handmade-shop</a><br />\n&nbsp;</p>\n\n<p><strong><a href=\"https://trandinhthang99.github.io/game-caro/\"><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/handmade-shop/\" width=\"1200\"></iframe><br />\n<br />\nGAME CARO | 08/2020</a></strong></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/game-caro\">https://github.com/trandinhthang99/game-caro</a></p>\n\n<p><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/game-caro/#/\" width=\"1200\"></iframe><br />\n<br />\n<a href=\"https://trandinhthang99.github.io/todolist-jquery/\"><strong>TO DO LIST JQUERY | 9/2019</strong></a></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/todolist-jquery\">https://github.com/trandinhthang99/todolist-jquery</a></p>\n\n<p><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/todolist-jquery/\" width=\"1200\"></iframe><br />\n<br />\n<a href=\"https://trandinhthang99.github.io/todolist-vuejs/\"><strong>TO DO LIST VUEJS | 10/2019</strong></a></p>\n\n<p><strong>Source</strong> :&nbsp;<a href=\"https://github.com/trandinhthang99/todolist-vuejs\">https://github.com/trandinhthang99/todolist-vuejs</a><br />\n&nbsp;</p>\n\n<p><iframe frameborder=\"0\" height=\"900\" scrolling=\"no\" src=\"https://trandinhthang99.github.io/todolist-vuejs/\" width=\"1200\"></iframe></p>\n"
    }
]